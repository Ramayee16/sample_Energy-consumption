{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPgzld1o0ofnT+zyAH2LA3E",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ramayee16/sample_Energy-consumption/blob/main/energy1.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "3hO9RXUGVkLo"
      },
      "outputs": [],
      "source": [
        "# prompt: import basic libraries\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "pd.set_option('display.max_columns', None)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: load /content/customer_churn.csv\n",
        "\n",
        "import pandas as pd\n",
        "df = pd.read_csv('/content/test_energy_data.csv')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "rBubpKUGVlyL",
        "outputId": "0be8e720-2440-4afa-e9fb-a1b5bc4177a5"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Building Type  Square Footage  Number of Occupants  Appliances Used  \\\n",
              "0   Residential           24563                   15                4   \n",
              "1    Commercial           27583                   56               23   \n",
              "2    Commercial           45313                    4               44   \n",
              "3   Residential           41625                   84               17   \n",
              "4   Residential           36720                   58               47   \n",
              "\n",
              "   Average Temperature Day of Week  Energy Consumption  \n",
              "0                28.52     Weekday             2865.57  \n",
              "1                23.07     Weekend             4283.80  \n",
              "2                33.56     Weekday             5067.83  \n",
              "3                27.39     Weekend             4624.30  \n",
              "4                17.08     Weekday             4820.59  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8ca74d5f-bf95-4b1d-85f9-f259e8a0904d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Building Type</th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "      <th>Day of Week</th>\n",
              "      <th>Energy Consumption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Residential</td>\n",
              "      <td>24563</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>28.52</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>2865.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>27583</td>\n",
              "      <td>56</td>\n",
              "      <td>23</td>\n",
              "      <td>23.07</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4283.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>45313</td>\n",
              "      <td>4</td>\n",
              "      <td>44</td>\n",
              "      <td>33.56</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>5067.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Residential</td>\n",
              "      <td>41625</td>\n",
              "      <td>84</td>\n",
              "      <td>17</td>\n",
              "      <td>27.39</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4624.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Residential</td>\n",
              "      <td>36720</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>17.08</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>4820.59</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ca74d5f-bf95-4b1d-85f9-f259e8a0904d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8ca74d5f-bf95-4b1d-85f9-f259e8a0904d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8ca74d5f-bf95-4b1d-85f9-f259e8a0904d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-02a91123-38f0-4967-b245-92913f06a612\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02a91123-38f0-4967-b245-92913f06a612')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-02a91123-38f0-4967-b245-92913f06a612 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Building Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Residential\",\n          \"Commercial\",\n          \"Industrial\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13711,\n        \"min\": 1161,\n        \"max\": 49354,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          21408,\n          39327,\n          37943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          99,\n          64,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          30,\n          45,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.957951349341124,\n        \"min\": 10.4,\n        \"max\": 34.71,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          27.59,\n          19.4,\n          21.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day of Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Weekend\",\n          \"Weekday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy Consumption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 832.5598495088822,\n        \"min\": 2351.97,\n        \"max\": 6042.56,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          5900.32,\n          3072.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#clean null\n",
        "df.isnull().sum().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NEAkdeNvV5x1",
        "outputId": "d1fa23c7-f55e-4c49-cd30-158df19a7383"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sVNBunsCWHH_",
        "outputId": "d1f8d73e-26d4-4dfb-eb32-6906ff5f829b"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 100 entries, 0 to 99\n",
            "Data columns (total 7 columns):\n",
            " #   Column               Non-Null Count  Dtype  \n",
            "---  ------               --------------  -----  \n",
            " 0   Building Type        100 non-null    object \n",
            " 1   Square Footage       100 non-null    int64  \n",
            " 2   Number of Occupants  100 non-null    int64  \n",
            " 3   Appliances Used      100 non-null    int64  \n",
            " 4   Average Temperature  100 non-null    float64\n",
            " 5   Day of Week          100 non-null    object \n",
            " 6   Energy Consumption   100 non-null    float64\n",
            "dtypes: float64(2), int64(3), object(2)\n",
            "memory usage: 5.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 304
        },
        "id": "po6rgBSnWmpQ",
        "outputId": "db96e4f7-50d7-4228-984b-6f913f180d14"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Building Type          0\n",
              "Square Footage         0\n",
              "Number of Occupants    0\n",
              "Appliances Used        0\n",
              "Average Temperature    0\n",
              "Day of Week            0\n",
              "Energy Consumption     0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Building Type</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Square Footage</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Number of Occupants</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Appliances Used</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Average Temperature</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Day of Week</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Energy Consumption</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dropna(inplace=True)"
      ],
      "metadata": {
        "id": "PYKgQNVeWpXl"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nGMFQsDeW0zI",
        "outputId": "ef5d29fa-5621-4faa-849b-82aa3208b85e"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aKW61EZdXDuo",
        "outputId": "4892e425-30d6-4d96-b150-5c92486d219f"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "BfvIONwtXRKB",
        "outputId": "b4f50d7e-1831-4365-f1a4-22620f99d9a1"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Building Type  Square Footage  Number of Occupants  Appliances Used  \\\n",
              "0   Residential           24563                   15                4   \n",
              "1    Commercial           27583                   56               23   \n",
              "2    Commercial           45313                    4               44   \n",
              "3   Residential           41625                   84               17   \n",
              "4   Residential           36720                   58               47   \n",
              "\n",
              "   Average Temperature Day of Week  Energy Consumption  \n",
              "0                28.52     Weekday             2865.57  \n",
              "1                23.07     Weekend             4283.80  \n",
              "2                33.56     Weekday             5067.83  \n",
              "3                27.39     Weekend             4624.30  \n",
              "4                17.08     Weekday             4820.59  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd713f57-05bc-4c00-a360-e2c7e0248772\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Building Type</th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "      <th>Day of Week</th>\n",
              "      <th>Energy Consumption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Residential</td>\n",
              "      <td>24563</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>28.52</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>2865.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>27583</td>\n",
              "      <td>56</td>\n",
              "      <td>23</td>\n",
              "      <td>23.07</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4283.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>45313</td>\n",
              "      <td>4</td>\n",
              "      <td>44</td>\n",
              "      <td>33.56</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>5067.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Residential</td>\n",
              "      <td>41625</td>\n",
              "      <td>84</td>\n",
              "      <td>17</td>\n",
              "      <td>27.39</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4624.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Residential</td>\n",
              "      <td>36720</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>17.08</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>4820.59</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd713f57-05bc-4c00-a360-e2c7e0248772')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dd713f57-05bc-4c00-a360-e2c7e0248772 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dd713f57-05bc-4c00-a360-e2c7e0248772');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f5ae78c4-1043-480b-87e4-d9efeb16e55f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5ae78c4-1043-480b-87e4-d9efeb16e55f')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f5ae78c4-1043-480b-87e4-d9efeb16e55f button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Building Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Residential\",\n          \"Commercial\",\n          \"Industrial\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13711,\n        \"min\": 1161,\n        \"max\": 49354,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          21408,\n          39327,\n          37943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          99,\n          64,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          30,\n          45,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.957951349341124,\n        \"min\": 10.4,\n        \"max\": 34.71,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          27.59,\n          19.4,\n          21.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day of Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Weekend\",\n          \"Weekday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy Consumption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 832.5598495088822,\n        \"min\": 2351.97,\n        \"max\": 6042.56,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          5900.32,\n          3072.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "X = df.drop('Energy Consumption', axis = 1)\n",
        "y = df['Energy Consumption']\n"
      ],
      "metadata": {
        "id": "4-P1j2utXZYT"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(y.value_counts())\n",
        "print(y.unique())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dBnS6XJ4adOj",
        "outputId": "2ddc189f-5c0e-4071-f167-a89b9f8fbfc0"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Energy Consumption\n",
            "2865.57    1\n",
            "4283.80    1\n",
            "5067.83    1\n",
            "4624.30    1\n",
            "4820.59    1\n",
            "          ..\n",
            "3010.81    1\n",
            "4248.49    1\n",
            "2843.60    1\n",
            "3348.39    1\n",
            "4722.59    1\n",
            "Name: count, Length: 100, dtype: int64\n",
            "[2865.57 4283.8  5067.83 4624.3  4820.59 5026.23 4404.56 2394.37 3969.09\n",
            " 5136.69 5162.33 3810.09 4400.48 4991.64 4474.98 2668.06 4987.52 4039.98\n",
            " 3388.29 4068.94 4379.87 4921.73 5116.9  4656.29 5508.64 4205.35 4275.65\n",
            " 4491.97 3999.14 3758.95 4779.08 4603.83 6042.56 3509.64 3598.87 4003.54\n",
            " 4193.36 3908.   2405.34 5611.18 4789.37 3840.2  4897.66 4428.85 4276.25\n",
            " 3506.64 5172.77 2731.87 3163.44 4149.12 3160.27 4294.59 5275.92 3072.63\n",
            " 3629.61 5014.79 2998.47 4983.43 4707.07 2872.05 2351.97 5161.94 3562.43\n",
            " 2725.89 5346.06 5446.   4575.58 4046.88 3039.52 3844.   4103.39 4721.39\n",
            " 5334.33 4510.2  4009.8  3375.06 4618.77 4939.07 3112.64 4612.04 3980.9\n",
            " 4374.35 4050.8  5900.32 3694.52 4652.65 5016.11 3127.82 5179.49 4001.96\n",
            " 3451.58 3977.63 3830.68 4250.29 4137.66 3010.81 4248.49 2843.6  3348.39\n",
            " 4722.59]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "le = LabelEncoder()\n",
        "y_encoded = le.fit_transform(y)\n",
        "print(y_encoded)\n",
        "le.classes_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bmKcze_8aprJ",
        "outputId": "853dfe0f-d47e-405c-d883-521e45fe0b07"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ 7 53 85 67 75 84 58  1 33 87 89 28 57 81 60  3 80 40 19 43 56 77 86 69\n",
            " 96 48 51 61 36 27 73 64 99 22 24 38 47 32  2 97 74 30 76 59 52 21 90  5\n",
            " 16 46 15 54 92 12 25 82  9 79 70  8  0 88 23  4 94 95 63 41 11 31 44 71\n",
            " 93 62 39 18 66 78 13 65 35 55 42 98 26 68 83 14 91 37 20 34 29 50 45 10\n",
            " 49  6 17 72]\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2351.97, 2394.37, 2405.34, 2668.06, 2725.89, 2731.87, 2843.6 ,\n",
              "       2865.57, 2872.05, 2998.47, 3010.81, 3039.52, 3072.63, 3112.64,\n",
              "       3127.82, 3160.27, 3163.44, 3348.39, 3375.06, 3388.29, 3451.58,\n",
              "       3506.64, 3509.64, 3562.43, 3598.87, 3629.61, 3694.52, 3758.95,\n",
              "       3810.09, 3830.68, 3840.2 , 3844.  , 3908.  , 3969.09, 3977.63,\n",
              "       3980.9 , 3999.14, 4001.96, 4003.54, 4009.8 , 4039.98, 4046.88,\n",
              "       4050.8 , 4068.94, 4103.39, 4137.66, 4149.12, 4193.36, 4205.35,\n",
              "       4248.49, 4250.29, 4275.65, 4276.25, 4283.8 , 4294.59, 4374.35,\n",
              "       4379.87, 4400.48, 4404.56, 4428.85, 4474.98, 4491.97, 4510.2 ,\n",
              "       4575.58, 4603.83, 4612.04, 4618.77, 4624.3 , 4652.65, 4656.29,\n",
              "       4707.07, 4721.39, 4722.59, 4779.08, 4789.37, 4820.59, 4897.66,\n",
              "       4921.73, 4939.07, 4983.43, 4987.52, 4991.64, 5014.79, 5016.11,\n",
              "       5026.23, 5067.83, 5116.9 , 5136.69, 5161.94, 5162.33, 5172.77,\n",
              "       5179.49, 5275.92, 5334.33, 5346.06, 5446.  , 5508.64, 5611.18,\n",
              "       5900.32, 6042.56])"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_num = X[['Square Footage', 'Number of Occupants','Appliances Used','Average Temperature']].copy()\n",
        "X_num.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "mwGHq6jMatXH",
        "outputId": "83cb2ded-0907-428e-c0c1-f44515f4f465"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Square Footage  Number of Occupants  Appliances Used  Average Temperature\n",
              "0           24563                   15                4                28.52\n",
              "1           27583                   56               23                23.07\n",
              "2           45313                    4               44                33.56\n",
              "3           41625                   84               17                27.39\n",
              "4           36720                   58               47                17.08"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b54c42f9-48d5-46a9-9b4b-d6a2d20a027d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>24563</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>28.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>27583</td>\n",
              "      <td>56</td>\n",
              "      <td>23</td>\n",
              "      <td>23.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>45313</td>\n",
              "      <td>4</td>\n",
              "      <td>44</td>\n",
              "      <td>33.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>41625</td>\n",
              "      <td>84</td>\n",
              "      <td>17</td>\n",
              "      <td>27.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>36720</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>17.08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b54c42f9-48d5-46a9-9b4b-d6a2d20a027d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b54c42f9-48d5-46a9-9b4b-d6a2d20a027d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b54c42f9-48d5-46a9-9b4b-d6a2d20a027d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-9034d539-25d7-49aa-84d3-a739cb9b8c18\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9034d539-25d7-49aa-84d3-a739cb9b8c18')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-9034d539-25d7-49aa-84d3-a739cb9b8c18 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_num",
              "summary": "{\n  \"name\": \"X_num\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13711,\n        \"min\": 1161,\n        \"max\": 49354,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          21408,\n          39327,\n          37943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          99,\n          64,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          30,\n          45,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.957951349341124,\n        \"min\": 10.4,\n        \"max\": 34.71,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          27.59,\n          19.4,\n          21.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: Box plot for numerical feature independently\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "for i in X_num.columns:\n",
        "  plt.figure(figsize=(6,4))\n",
        "  sns.boxplot(data=X_num, y=i)\n",
        "  plt.title(f'Box plot for {i}')\n",
        "  plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "N69t0HGXcwXj",
        "outputId": "b1f0a91d-5b99-434c-a19f-2a29e0da6557"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "for col in X_num.columns:\n",
        "  plt.figure(figsize=(6,4))\n",
        "  sns.histplot(data=X_num, x=col, kde=True)\n",
        "  plt.title(f'Distribution of {col}')\n",
        "  plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Ad_rE5omdTH6",
        "outputId": "56572d1e-7cc9-40ee-b0b7-0770b229e361"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: concat X_num and y_encoded\n",
        "\n",
        "import pandas as pd\n",
        "y_encoded= y_encoded.astype(int)\n",
        "X_processed = pd.concat([X_num, pd.Series(y_encoded, name='Energy Consumption_encoded')], axis=1)\n",
        "X_processed.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "o2yYe4FWdsU1",
        "outputId": "49f82745-4eea-4d5f-a5a3-3cc67a2537b7"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Square Footage  Number of Occupants  Appliances Used  Average Temperature  \\\n",
              "0           24563                   15                4                28.52   \n",
              "1           27583                   56               23                23.07   \n",
              "2           45313                    4               44                33.56   \n",
              "3           41625                   84               17                27.39   \n",
              "4           36720                   58               47                17.08   \n",
              "\n",
              "   Energy Consumption_encoded  \n",
              "0                           7  \n",
              "1                          53  \n",
              "2                          85  \n",
              "3                          67  \n",
              "4                          75  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-862f1c9e-d959-4b01-a59a-d428f59aa36d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "      <th>Energy Consumption_encoded</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>24563</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>28.52</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>27583</td>\n",
              "      <td>56</td>\n",
              "      <td>23</td>\n",
              "      <td>23.07</td>\n",
              "      <td>53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>45313</td>\n",
              "      <td>4</td>\n",
              "      <td>44</td>\n",
              "      <td>33.56</td>\n",
              "      <td>85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>41625</td>\n",
              "      <td>84</td>\n",
              "      <td>17</td>\n",
              "      <td>27.39</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>36720</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>17.08</td>\n",
              "      <td>75</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-862f1c9e-d959-4b01-a59a-d428f59aa36d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-862f1c9e-d959-4b01-a59a-d428f59aa36d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-862f1c9e-d959-4b01-a59a-d428f59aa36d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-7c8eba0b-e267-49c4-8d6e-849d0a73e2e1\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c8eba0b-e267-49c4-8d6e-849d0a73e2e1')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-7c8eba0b-e267-49c4-8d6e-849d0a73e2e1 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_processed",
              "summary": "{\n  \"name\": \"X_processed\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13711,\n        \"min\": 1161,\n        \"max\": 49354,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          21408,\n          39327,\n          37943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          99,\n          64,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          30,\n          45,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.957951349341124,\n        \"min\": 10.4,\n        \"max\": 34.71,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          27.59,\n          19.4,\n          21.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy Consumption_encoded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          98,\n          12,\n          44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: heatmap\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.heatmap(X_processed.corr(), annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Correlation Heatmap of Numerical Features')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 742
        },
        "id": "XHfa_ljpeFeO",
        "outputId": "5445b3b6-5912-4a27-cdbf-2b4aa267e6c2"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "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rxqNBm3atBEjT8/y9vYGANjb2yMsLAx79+7F7t27sXv3bqxduxb9+vXTmgyDqLyxcUNEb42OHTti5cqVOHnyJAICAkrM6+bmBo1Gg5s3b4pPxAEgISEBqampcHNze+l6VKpUCUBBg6u0EYwnDh8+jKSkJGzbtg1NmzYV06OioorkLW3D7MmxREZGFlkXEREBW1tbrajN61SpUiVcunQJrVq1KvF4/vzzT6hUKuzcuVMrQvB0F54nyuot9b///juUSiX27t0LhUIhpq9du1Zn/icRiafduHEDxsbGJQ78d3Nzw+XLl6HRaLSiN0+6SP2b7+bTKlWqhA8//BArVqwQu4o9zcrKCqmpqUXSX0Xk6Nl6AC/3e3leuRqNBtevXy+20fQiv7dXWa/X9Z1/Eu1KTU2FpaWlmP4if8NKlSohIyOjVH8buVyOTp06oVOnTtBoNBg2bBhWrFiBr776qkiUnKi8cMwNEb01xo8fDxMTEwwePBgJCQlF1t++fVuclvTdd98FAHGmnyeePE19duarF+Hv749KlSph/vz5yMjIKLL+0aNHxW775Cn30xGD3NxcLF26tEheExOTUnWbcXJygp+fH9avX691s3r16lX8/fff4rkoDz169EBsbCxWrVpVZF12djYyMzMB6D4vaWlpOhsWJiYmOm/K/y2ZTAaJRKL11Ds6OlprdqunnTx5UmssTkxMDP744w+0bdu22GgGUPDdjI+Px+bNm8W0/Px8LF68GKampmjWrNm/P5h/TJ48GXl5eZg7d26RdZUqVUJaWhouX74spsXFxRWZSfDf+je/l5J06dIFUqkUM2bMKBLlePI9epHf26vyOr/zTxqOT09BnpmZ+UKRlB49euDkyZPYu3dvkXWpqanIz88HACQlJWmtk0qlqFmzJgAUmeKaqDwxckNEb41KlSrhl19+Qc+ePVGlShX069cP1atXR25uLk6cOCFOpwsAtWrVQv/+/bFy5Uqxa8qZM2ewfv16dOnSBS1atHjpekilUvz4449o3749qlWrhgEDBsDFxQWxsbE4dOgQzM3N8eeff+rctmHDhrCyskL//v0xcuRISCQS/PTTTzq7g/n7+2Pz5s0YM2YM3nnnHZiamqJTp046y503bx7at2+PgIAADBo0SJwK2sLCAtOmTXvpY/23+vbtiy1btuCTTz7BoUOH0KhRI6jVakRE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0hebslkfMXJDRERERER6gZEbojcUZ+h6cwxd17W8q0BP2TPvbHlXgf5x/1bC8zPRa3FyyJflXQX6R6ty3LdEwrgFzwAREREREekFRm6IiIiIiPQBx9ywcUNEREREpA8knAqa3dKIiIiIiEg/MHJDRERERKQHOBU0IzdERERERKQnGLkhIiIiItIHnAqakRsiIiIiItIPjNwQEREREekBjrlh5IaIiIiIiPQEIzdERERERPqA77lh44aIiIiISB9IJOyWxuYdERERERHpBUZuiIiIiIj0AbulMXJDRERERET6gZEbIiIiIiI9wKmgGbkhIiIiIiI9wcgNEREREZE+kDBuwTNARERERER6gZEbIiIiIiJ9wDE3bNwQEREREekDCbulsVsaERERERHpB0ZuiIiIiIj0AbulMXJDRERERET6gZEbIiIiIiI9IJEybsEzQEREREREeoGRGyIiIiIifSDhmBtGboiIiIiISC8wckNEREREpA845oaNGyIiIiIivcBuaeyWRkRERERE+oGRGyIiIiIiPcCpoBm5ISIiIiIiPcHIDRERERGRPpAwbsEzQEREREREeoGRGyIiIiIifSDlbGmM3BARERERkV5g5IaIiIiISA9IOOaGkRsiIiIiItIPbNy8waKjoyGRSBAWFlbeVRFFRESgQYMGUCqV8PPzK+/qEBEREdETUknZLW8JdksrQVBQENavX4/g4GB88cUXYvqOHTvQtWtXCIJQjrUrH1OnToWJiQkiIyNhampabL6YmBhMnToVe/bsQWJiIpycnNClSxdMmTIFNjY2r7HGr0dQUBBSU1OxY8eO8q7Ka9Gnsx0Cm1jCxFiG8FtZWLoxHg8e5pa4TYfmVng/0AZWFgaIilFhxa9xuBGdI663NJdh4P8cULuqKYyUUtyPV2HLrkScuPC4rA/nrWPduC48xw6CRZ3qUDrb41y3YUjYeaDkbZrWQ9X5X8C0amXkxMThVvAy3N+wXSuP29De8BwzCApHO6RfjsC10TORdvZKWR6K3mhS0xCt6ipgbixBbKIGvx3Kxt0ETbH5/SoboGOAAtbmUjxK1eCP4ypcj84X17dvoIC/twEszaRQq4GYh2r8eUKFu/Hq13E4b71eHazRuqEFTIykiLiTgxWbHyLuUV6J27RvaoEuraxgaS5DdGwuftz6EDfvqrTy+Hgo0aejDSq7K6HRCIiKzcWMJbHIzfvv3Q+UxpHdm7Bv53qkpyaigps3egz6Au6Va+jMe/HUfuzdthqP4mOgVufB3skNrTr1Rf1mncQ8giDgr81LEbp/G7KzHsPTxw+9Pp4Eeye313VIbz52S2Pk5nmUSiXmzJmDlJSU8q7KK5ObW/JNaElu376Nxo0bw83NrdhGyp07d1C3bl3cvHkTv/76K27duoXly5fjwIEDCAgIQHJy8kvvn8pft3Y26NTKGkt+jsPY2VHIyRUwY3RFGBoU/1SnSV1zDO7hgF//fIRRM+8g6n4OZox2g4WZTMwzZqALKjgqMPOHexg+7TZOXnyMCUMqwNNV+ToO660iMzFG+uVIXB05vVT5jdwr4J2dK5B0+DSO130PUYvXo8aKWbBt01jM49S9ParMm4ibs5bgeL2ueHw5AvVDVkNuZ11Wh6E36ngboGtTJXafUmHuL5mIfaTGsK4mMDXS/ZvwcJIhqL0RTl7Lw5yNmbh8Ox8fdTKCk03hP8kPU9TYeigHwT9l4LstmUhK12B4V+Niy6RCXVtboUMzS6zY9BAT5sdAlavBlOEuJV6jGtUxxYCutti8Oxlj58QgOlaFKcNdYGFaeI3y8VDiq2HOCIvIwvh5Mfh8Xgx2HUmFhu0anc6F7sHv6+ejQ/chmDh3E1zcfbB41lA8TkvSmd/E1ALtug3GuNkbMOnb39CgxXv4aclUXA8LFfPs27EWh3f9il4fT8bns3+GQmGExTOHIi9XpbNM+m9i4+Y5WrduDUdHRwQHBxebZ9q0aUW6aC1cuBDu7u7i56CgIHTp0gWzZ8+Gg4MDLC0tMWPGDOTn5+Pzzz+HtbU1KlSogLVr1xYpPyIiAg0bNoRSqUT16tVx5MgRrfVXr15F+/btYWpqCgcHB/Tt2xeJiYni+ubNm2PEiBEYPXo0bG1tERgYqPM4NBoNZsyYgQoVKkChUMDPzw979uwR10skEpw/fx4zZsyARCLBtGnTdJYzfPhwyOVy/P3332jWrBkqVqyI9u3bY//+/YiNjcWkSZPEvCqVChMmTICrqysUCgW8vLywevVqcf21a9fQsWNHmJubw8zMDE2aNMHt27fF4xo9erTWvrt06YKgoCDxs7u7O2bOnIlevXrBxMQELi4uWLJkidY2CxYsQI0aNWBiYgJXV1cMGzYMGRkZ4vp169bB0tISe/fuRZUqVWBqaop27dohLi4OQMHff/369fjjjz8gkUggkUhw+PBh5ObmYsSIEXBycoJSqYSbm1uJ36O3xXutrLE5JBGnL2UgOlaFBWtiYW1pgIDaZsVu06WNDfYeS8X+E2mIicvFkp/joMrVoE0jSzFPlUrG+PNgMm5E5yAhMQ+bQxKRmaWGlxsbN896tPcobkxdiIQ/9pcqv9vHHyA76j7Cx89BRsQd3F26EfG/74XHqCAxj8foAYhZvQX3129DRvhtXBk2FeqsHLgGdSujo9AfLeoocPJqHk5fz0N8sgabD+QgN19AQDVDnfmb15YjPDofB87nIiFFg5CTKsQ8VKNpLbmY53xkPiJj1EhKFxCfrMH2ozkwUkjgbMt/tp+nYwtLbN2bjDNXMnH3QS6+35AAawsZ6tcyKXabzi2tsO9EOg6eSsf9+Fws3/QQqlwBrQLMxTwD3rdFyOFUbNuXgpj4XDx4mIcTFzOQn8/WjS4H//wJjVq/j4CWXeDkWgm9Pp4MuUKJEwd36MzvXf0d+NVvBacKnrBzdEXLDn3g4lYZt8MvAiiI2hwM2Yh23T5CrXotUMHdG/0/nYW0lEe4dObgazyyN5xEUnbLW4JXyeeQyWSYPXs2Fi9ejPv37/+rsg4ePIgHDx7g6NGjWLBgAaZOnYqOHTvCysoKp0+fxieffIIhQ4YU2c/nn3+OsWPH4uLFiwgICECnTp2QlFTw5CM1NRUtW7ZE7dq1ce7cOezZswcJCQno0aOHVhnr16+HXC5HaGgoli9frrN+33//Pb799lvMnz8fly9fRmBgIDp37oybN28CAOLi4lCtWjWMHTsWcXFxGDduXJEykpOTsXfvXgwbNgxGRkZa6xwdHdGnTx9s3rxZ7NLXr18//Prrr1i0aBHCw8OxYsUKsbtbbGwsmjZtCoVCgYMHD+L8+fMYOHAg8vPzi+y3JPPmzUOtWrVw8eJFfPHFFxg1ahT27dsnrpdKpVi0aBGuXbuG9evX4+DBgxg/frxWGVlZWZg/fz5++uknHD16FPfu3ROPf9y4cejRo4fY4ImLi0PDhg2xaNEi7Ny5E1u2bEFkZCQ2btyo1eB9GznYGsLa0hBh4YWNv6xsDSLvZMPX00jnNgYywMtNibDwTDFNEICw8Ez4VjIW08JvZ6HJO+YwNZZCIgGavmMOuaEUVyIzdRVLL8CygR8SD57USnu07zisGvgBACSGhrCoUw2JB04UZhAEJB48AcsGtV9jTd8+Mingai9FZEzhdUkAEHkvH+5OMp3buDvKEBmj3b0s4q4aHsXkl0mBhtXlyFIJiH1UfFc3AhxsDGBtYYBLEVliWlaOBjejc+DjrvtBiYEMqOSqwKXIwm0EAbgcmQUfj4JtLExl8PEwQlqGGsFjKmDtbA/MGuWCKp58+KJLfl4e7t0Jh0/NBmKaVCqFb40GiIq8/NztBUFAxOXTSHgQDa+q/gCApIexSE9NhG/N+mI+IxMzuFeugTs3nl8m/XdwzE0pdO3aFX5+fpg6dapWVOFFWVtbY9GiRZBKpfDx8cHcuXORlZWFL7/8EgAwceJEfPPNNzh+/Dg++OADcbsRI0agW7eCp6fLli3Dnj17sHr1aowfPx4//PADateujdmzZ4v516xZA1dXV9y4cQPe3t4AgMqVK2Pu3Lkl1m/+/PmYMGGCuO85c+bg0KFDWLhwIZYsWQJHR0cYGBjA1NQUjo6OOsu4efMmBEFAlSpVdK6vUqUKUlJS8OjRI6SmpmLLli3Yt28fWrduDQDw9PQU8y5ZsgQWFhbYtGkTDA0LnoA+OZ4X0ahRI3HMlLe3N0JDQ/Hdd9+hTZs2AKAV/XF3d8esWbPwySefYOnSpWJ6Xl4eli9fjkqVKgEo+JvMmDEDAGBqagojIyOoVCqt83Lv3j1UrlwZjRs3hkQigZtb8X2CVSoVVCrtsLpanQuZTF7MFuXDyqLgkpGarn1jlvo4H5YWui8n5qYGkMkkSE3XbpSmpuejgqNC/DxnxX1MGFIBm773RX6+AFWuBl8vjXluP3l6PoWDLVQJiVppqoREGFqYQapUwNDKAlIDA6geJj2TJwkmPp6g4pkYSSCTSpCepf30/nGWAAdr3Y0VcxMJHmdpnsmvgZmx9pPRah4GGNDeCIaGQHqmgCXbMpGZwyhBSSzNC65DaY+fvUapxXXPMjOVQSaTFN0mPR8uDgUPYBxsC/4N+uBdG6zbnoio+yo0r2eG6Z+6YNTse7xOPSPjcQo0GjXMLbS7r5tZ2iAhNqrY7bIzH+PLIW2Ql5cHqVSKDwZ/iSq1AgAAaSkF1zBzS+0yzS1skJ6aWKSs/ywp4xY8A6U0Z84crF+/HuHh4S9dRrVq1SB96kvn4OCAGjUKB9bJZDLY2Njg4cOHWtsFBASI/29gYIC6deuK9bh06RIOHToEU1NTcfH19QUAsfsWAPj7+5dYt/T0dDx48ACNGjXSSm/UqNFLHXNpJlsICwuDTCZDs2bNil3fpEkTsWHzsp4+f08+P31M+/fvR6tWreDi4gIzMzP07dsXSUlJyMoqfIpnbGwsNmwAwMnJqcjf6VlBQUEICwuDj48PRo4cib///rvYvMHBwbCwsNBaboetetFDfeWa1zfH1sW+4mIgK7uw9Idd7GFiJMOkb+/is6/vYMf+JEwYUgFuLornb0ykh27G5OObjRn4bnMWwqPzMfBdjrl5VtO6Zvjl20riUlbXqCc9cvYeT8PBU+mIuq/C2m2JiH2Yp9V1jf4dhZEJJs7bggnfbETnXiPw+/pvcePq2fKuFr1lGLkppaZNmyIwMBATJ07UGtMBFIRan72Zz8sr+hTn2Zt0iUSiM02jKX23g4yMDHTq1Alz5swpss7JyUn8fxOT4vsav0peXl6QSCQIDw9H165di6wPDw+HlZUV7OzsinRbe9bz1pf2vJckOjoaHTt2xNChQ/H111/D2toax48fx6BBg5Cbmwtj44Kndrr+Ts9rwNWpUwdRUVHYvXs39u/fjx49eqB169b47bffiuSdOHEixowZo5XWc/SdFzqWsnA6LAORdwobyYaGBY1zS3MZUtIKIzGWZgaIiskpsj0ApGfkQ60Wijw1tTQ3QMo/0RxHO0N0ammNYVNv496DgghW1H0VqnkZo2MLKyz5Of6VHtd/jSohEQoHW600hYMt8tIeQ5OjQm5iCjT5+VDY2zyTxwaqeD4RLUlmtgC1RoD5M1EXM2MJ0jN1X8vTMwWYGUufyS/F42eiP7n5QGKagMQ0NaLj1fiqvwkCqhti39mXnxRG35y5kqE16+KTSQMszGRIeSrCbGkmQ9R93YPOH2eooVYLWhOcAAXXqCcR5yfXqvvx2uf+fnwubK14K/UsUzMrSKUypD8zecDj1CSYW9oWs1XBv+v2ThUBAK4evoiPjcLe7avhXf0dWFgVbJeemgQLKztxm/S0JFRw9ymDo3hLcbY0Rm5exDfffIM///wTJ09q9123s7NDfHy81s3uq3w3zalTp8T/z8/Px/nz58VuX3Xq1MG1a9fg7u4OLy8vreVFGjTm5uZwdnZGaGioVnpoaCiqVq1a6nJsbGzQpk0bLF26FNnZ2Vrr4uPjsXHjRvTs2RMSiQQ1atSARqMpMkHCEzVr1sSxY8eKbbDY2dmJg/oBQK1W4+rVq0XyPX3+nnx+cv7Onz8PjUaDb7/9Fg0aNIC3tzcePHhQ6uN9Qi6XQ60uOkWrubk5evbsiVWrVmHz5s34/fffdc4Wp1AoYG5urrW8CV3SslUaxD3KE5d7D1RITs2Dn2/hd8tIKYWPpxEi7mTrLCNfDdy6m4NaVQq3kUiAWlVMEHG7IDqmkBdcijTPTDukEQoakvTvpJ4Kg03LBlpptq0aIuVUGABAyMtD2oVrsG35VJRTIoFNiwCknrr4Gmv69lFrgJiHGni7Ft7gSgB4uxogOk73tM3R8Wp4u2rfSPtUlCGqmPxiuRJJmUZP30Y5KgHxiXniEhOfi+S0fNT0KRzPZ6SUorK7EpHRuh/A5KuB2zEqrW0kEqCGtxEiowq2eZiUj6TUfDjbaz/ocrY3xKPkFxsH+l9gYGiIip5VEHnltJim0WgQeeU0PHxqlrocQaNB/j/3ADb2LjC3tNUqMzsrA9E3r8DTu/Rlkv5j4+YF1KhRA3369MGiRYu00ps3b45Hjx5h7ty5uH37NpYsWYLdu3e/sv0uWbIE27dvR0REBIYPH46UlBQMHDgQQMHMZMnJyejVqxfOnj2L27dvY+/evRgwYIDOm+2SfP7555gzZw42b96MyMhIfPHFFwgLC8OoUaNeqJwffvgBKpUKgYGBOHr0KGJiYrBnzx60adMGLi4u+PrrrwEUjG/p378/Bg4ciB07diAqKgqHDx/Gli1bABSMa0lPT8cHH3yAc+fO4ebNm/jpp58QGRkJAGjZsiVCQkIQEhKCiIgIDB06FKmpqUXqExoairlz5+LGjRtYsmQJtm7dKh6Tl5cX8vLysHjxYty5cwc//fRTsRMulMTd3R2XL19GZGQkEhMTkZeXhwULFuDXX39FREQEbty4ga1bt8LR0RGWlpYvXP6b5I8DyejZwQ71apnCzUWBMQOdkZyaj5MXC99H8/UYN3RsYSV+3rEvCYFNLNEywAIVHOUY1scJSrkU+0NTAQD341V4kKDCiL5O8HZXwtHOEF3bWMOviglOXeR7bp4lMzGGeS1fmNcq6IJq7FEB5rV8oXQtiNb6zBqDWmsLo7l3V26CsYcrfIM/h4mPJ9w+6Q2n7u0R9f06MU/UwrVwHdQDLn27wNTXE9WXTIOBiRFi1m97rcf2Njp0QYWG1Q1Rr4ohHKyk6NFKCYWhBKeuF9yU9W2rRKdGhd0rD1/MRVU3A7SsI4eDlRTtGyhQ0UGGo5cKogJyA6BTQwXcHWWwMpPA1V6K3m2UsDSV4OINju14nr8OpaJ7O2u8U8MEFZ3lGNXXAclpapy+VDg5yfRPXdC+qYX4eefBFLRpaI4W9c1QwcEQQ3raQ6mQ4sCpdDHPjv0p6NDcEgF+pnC0NUSvDtZwcZDjwMl0UFEtO/VF6P5tOHV4J+Lu38GmVbOgUmUjoEUXAMC6RZOwY+P3Yv4921Yj/NJJJCbcR9z9O9i/cz1OHw1BvaYdABQ07lt26IPdv6/C5bOHEXv3JtYvngwLKzvUqteyPA7xzcSXeLJb2ouaMWMGNm/erJVWpUoVLF26FLNnz8bMmTPRrVs3jBs3DitXrnwl+/zmm2/wzTffICwsDF5eXti5cydsbQvCs0+iLRMmTEDbtm2hUqng5uaGdu3aaY3vKY2RI0ciLS0NY8eOxcOHD1G1alXs3LkTlStXfqFyKleujHPnzmHq1Kno0aMHkpOT4ejoiC5dumDq1Kmwti58b8ayZcvw5ZdfYtiwYUhKSkLFihXFCRZsbGxw8OBBfP7552jWrBlkMhn8/PzEcUEDBw7EpUuX0K9fPxgYGOCzzz5DixYtitRn7NixOHfuHKZPnw5zc3MsWLBAnA67Vq1aWLBgAebMmYOJEyeiadOmCA4ORr9+/V7omD/66CMcPnwYdevWRUZGBg4dOgQzMzPMnTsXN2/ehEwmwzvvvINdu3a98N/lTfP7niQo5VJ82tcZJsZSXL+ZhSnf30PeU9OhOtoZwty08PJy7Fw6LMxk+PA9O1iZG+BOjApTvr+H1H8G8KrVwLRFMej/vj2++rQijBRSxD3MxXdrH+Dc1Ywidfivs/CvjoADP4mfq84v+M3EbNiGy4MmQuFkByPXwm6p2dH3cbbzEFT9diLcP+2HnPvxuDJkMhL3HRfzxG3dDbmdNbynjix4ieelcJzpOBi5D3W/k4IKXbiRD1OjHHQIUMDsn5d4Lt2RJXYzszKXQkBhF7WoODXW7clGxwAFOjZU4FGqBqv+zEZcUkEejQA4WEtRr6oRTJQSZOUIuJugxsKtmYhP5mxpz7N9fwqUCgmG9rKHiZEU4bdzMHNprPY1ytYQ5k+9wyb0QgbMTWX4oIMNrMxk4ss5n55k4K/DqZAbSjCwmy1MjWWIjlVh+g+xiE9kg1OXuo3aISM9BX9tWlrwEk93H4yYtFScECAlMV7r38NcVTY2rZqN1OQEGMoVcHD2QNDIr1G3UTsxT5suA6BSZeOXFTOQlfkYlXxrY8TkpTCUc2ymiN3SIBFKM/Kb6C3l7u6O0aNHF3kfztug40fXy7sK9I+h64qOH6Pys2ceBxi/Ke7fSijvKtA/RgxxLe8q0D9a1Si/KcJz/vihzMpWvjeizMp+lRi5ISIiIiLSBxynyjE3RERERESkHxi5Ib0WHR1d3lUgIiIiej3e8nG9rwLPABERERER6QVGboiIiIiI9AHH3DByQ0RERERE+oGRGyIiIiIifcD33LBxQ0RERESkFzihALulERERERGRfmDkhoiIiIhIH3BCAUZuiIiIiIhIPzByQ0RERESkDzihACM3RERERESkH9i4ISIiIiLSBxJJ2S0vYcmSJXB3d4dSqUT9+vVx5syZEvOnpqZi+PDhcHJygkKhgLe3N3bt2vVC+2S3NCIiIiIieqU2b96MMWPGYPny5ahfvz4WLlyIwMBAREZGwt7evkj+3NxctGnTBvb29vjtt9/g4uKCu3fvwtLS8oX2y8YNEREREZE+eIPec7NgwQJ89NFHGDBgAABg+fLlCAkJwZo1a/DFF18Uyb9mzRokJyfjxIkTMDQ0BAC4u7u/8H7fnDNAREREREQvTZBIymxRqVRIT0/XWlQqlc565Obm4vz582jdurWYJpVK0bp1a5w8eVLnNjt37kRAQACGDx8OBwcHVK9eHbNnz4ZarX6hc8DGDRERERERlSg4OBgWFhZaS3BwsM68iYmJUKvVcHBw0Ep3cHBAfHy8zm3u3LmD3377DWq1Grt27cJXX32Fb7/9FrNmzXqherJbGhERERGRPijDqaAnTpyIMWPGaKUpFIpXVr5Go4G9vT1WrlwJmUwGf39/xMbGYt68eZg6dWqpy2HjhoiIiIiISqRQKErdmLG1tYVMJkNCQoJWekJCAhwdHXVu4+TkBENDQ8hkMjGtSpUqiI+PR25uLuRyean2zW5pRERERET6QCItu+UFyOVy+Pv748CBA2KaRqPBgQMHEBAQoHObRo0a4datW9BoNGLajRs34OTkVOqGDcDGDRERERERvWJjxozBqlWrsH79eoSHh2Po0KHIzMwUZ0/r168fJk6cKOYfOnQokpOTMWrUKNy4cQMhISGYPXs2hg8f/kL7Zbc0IiIiIiI9ILzkyzbLQs+ePfHo0SNMmTIF8fHx8PPzw549e8RJBu7duwfpU1NXu7q6Yu/evfjss89Qs2ZNuLi4YNSoUZgwYcIL7ZeNGyIiIiIieuVGjBiBESNG6Fx3+PDhImkBAQE4derUv9onGzdERERERPqgDGdLe1uwcUNEREREpA/eoG5p5YXNOyIiIiIi0guM3BARERER6QMp4xY8A0REREREpBcYuSEiIiIi0gNv0lTQ5YWRGyIiIiIi0guM3BARERER6QNOBc3IDRERERER6QdGboiIiIiI9IDAyA0bN0REREREeoETCrBbGhERERER6QdGboiIiIiI9AC7pTFyQ0REREREeoKRGyIiIiIifcAxN4zcEBERERGRfmDkhoiIiIhIH3DMDRs3RG+q1PhH5V0F+seeeWfLuwr0lHafv1PeVaB/zOm4uryrQP+ISapc3lUgeiOwcUNEREREpAcEjrlh44aIiIiISC+wWxonFCAiIiIiIv3AyA0RERERkR4QwG5pjNwQEREREZFeYOSGiIiIiEgPCBxzw8gNERERERHpB0ZuiIiIiIj0ASM3jNwQEREREZF+YOSGiIiIiEgP8CWebNwQEREREekFTijAbmlERERERKQnGLkhIiIiItIH7JbGyA0REREREekHRm6IiIiIiPQAx9wwckNERERERHqCkRsiIiIiIj0ggGNuGLkhIiIiIiK9wMgNEREREZEe4JgbRm6IiIiIiEhPMHJDRERERKQP+J4bNm6IiIiIiPSBwE5ZPANERERERKQfGLkhIiIiItIDArulMXJDRERERET6gZEbIiIiIiI9wKmgGbkhIiIiIiI9wcgNEREREZEeEMAxN4zcEBERERGRXmDkhoiIiIhID3DMDRs3RERERER6gVNBs1saERERERHpCUZuiIiIiIj0ACcUYOSGiIiIiIj0BCM3RERERER6gBMKMHJDRERERER6gpEbIiIiIiI9wDE3jNwQEREREZGeYOOGijVt2jT4+fmJn4OCgtClS5dyq8/bTiKRYMeOHeVdDSIiItJTgkRaZsvbgt3S3lInT55E48aN0a5dO4SEhLyWfX7//fcQBOG17KusNG/eHH5+fli4cKFW+rp16zB69GikpqaWS73eNoP6uKNTW0eY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C99BJJVK0bp1a5w8eVLnNkDBOxrt7e0xaNCgl64nGzdERERERHqgLCM3wcHBsLCw0FqCg4N11iMxMRFqtRoODg5a6Q4ODoiPj9e5zfHjx7F69WqsWrXqX50DTgVNRERERKQHBKHspoKeOHEixowZo5WmULyaF6g+fvwYffv2xapVq2Bra/uvymLjhoiIiIiISqRQKErdmLG1tYVMJkNCQoJWekJCAhwdHYvkv337NqKjo9GpUycxTaPRAAAMDAwQGRmJSpUqlWrf7JZGRERERKQH3pQJBeRyOfz9/XHgwAExTaPR4MCBAwgICCiS39fXF1euXEFYWJi4dO7cGS1atEBYWBhcXV1LvW9GboiIiIiI6JUaM2YM+vfvj7p166JevXpYuHAhMjMzMWDAAABAv3794OLiguDgYCiVSlSvXl1r+yfva3w2/XnYuCEiIiIi0gMv+7LNstCzZ088evQIU6ZMQXx8PPz8/LBnzx5xkoF79+5BKn31ncjYuCEiIiIiolduxIgRGDFihM51hw8fLnHbdevWvdQ+2bghIiIiItIDb1LkprxwQgEiIiIiItILjNwQEREREemBsnzPzduCjRsiIiIiIj2gYbc0dksjIiIiIiL9wMgNEREREZEe4IQCjNwQEREREZGeYOSGiIiIiEgPcEIBRm6IiIiIiEhPMHJDRERERKQHOOaGkRsiIiIiItITjNwQEREREekBjrlh44aIiIiISC+wWxq7pRERERERkZ5g5IaIiIiISA+wWxojN0REREREpCcYuSEiIiIi0gOa8q7AG4CRGyIiIiIi0guM3BARERER6QGOuWHkhoiIiIiI9AQjN0REREREeoDvuWHjhoiIiIhIL7BbGrulERERERGRnmDkhoiIiIhID7BbGiM3RERERESkJxi5ISIiIiLSAxqhvGtQ/hi5ISIiIiIivcDIDRERERGRHuCYGzZuiN5Yfi38yrsK9I/7txLKuwr0lDkdV5d3FegfE/4aVN5VoH+sdNxZ3lWgfwQ19ynvKvynsXFDRERERKQH+J4bjrkhIiIiIiI9wcgNEREREZEeEDhbGhs3RERERET6QMMJBdgtjYiIiIiI9AMjN0REREREeoATCjByQ0REREREeoKRGyIiIiIiPcAJBRi5ISIiIiIiPcHIDRERERGRHhA4WxojN0REREREpB8YuSEiIiIi0gMa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yiUY1tsRJsZShN/OxvTF97WvUXZyrWvU8fOPYW4qQ++OtrAyL+hmO33x/SITobRuaIGk1HyEhTOi/Kbq2bMnHj16hClTpiA+Ph5+fn7Ys2ePeL947949rbHYy5YtQ25uLv73v/9plVPcpAXFkQjPDiigt979+/fh6uqK/fv3o1WrVuVdnVKTSCTYvn27GL78rxuxgNNavili77AL0JskKTbh+ZnotZjw16DyrgL9Y+XgneVdBfrHH8t8ym3fq0r3iqeX8tGLTVpWbhi50QMHDx5ERkYGatSogbi4OIwfPx7u7u5o2rTp8zcmIiIiItITbNzogby8PHz55Ze4c+cOzMzM0LBhQ2zcuLHI7GREREREpL9eYBJavcXGjR54Ms3x2449JImIiIjo32Djhojo/+3deVzM+R8H8NdM912ulFqVkkrItY5dV5Ez17qXyLqWZYXFrnvJsa5120UKy1rXuq9cK0coHXSpSHRQKpVSzfz+6GfWbLGsmq9mXs/HYx4P8/l+Z3pNo5r393MREREpAV4n5lLQRERERESkJNhzQ0RERESkBNhzw+KGiIiIiEgp/JfNNpUNh6UREREREZFSYM8NEREREZESqNiVZ0UV+Nzlhz03RERERESkFNhzQ0RERESkBLigAHtuiIiIiIhISbDnhoiIiIhICUgkQicQHntuiIiIiIhIKbDnhoiIiIhICXDODYsbIiIiIiKlwE08OSyNiIiIiIiUBHtuiIiIiIiUAIelseeGiIiIiIiUBHtuiIiIiIiUgLRCJ92IKvC5yw97boiIiIiISCmw54aIiIiISAlwtTT23BARERERkZJgzw0RERERkRLgamksboiIiIiIlIKE49I4LI2IiIiIiJQDe26IiIiIiJQAh6Wx54aIiIiIiJQEe26IiIiIiJQAe27Yc0NEREREREqCPTdEREREREpAwq4b9twQEREREZFyYM8NEREREZESkEqETiA89twQEREREZFSYM8NEREREZESkHLODYsbIiIiIiJlIOGwNA5LIyIiIiIi5cCeGyIiIiIiJcBhaey5ISIiIiIiJcGeGyIiIiIiJSBhxw2LG6KP1TKjFUJHoP+7OuZ7oSPQax6m2wkdgf7vl5qHhY5A/zd6i4fQEeiVjdFCJ1BpLG6IiIiIiJSAlF03nHNDRERERETKgT03RERERERKgIulsbghIiIi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80BvZ9SkPloG7JDdd1xesvDUQ/8DCBs5E1pm1aFj+ffnyRf3k3DDYwwcV8yE1TfDkJ+UgvAxs/D0zGXZOcl/nIBm9SqoO3diySaeoZEI6v4VXqZx/hP9TSStxDOPFi1ahE2bNskNMwKAHTt2YPLkyXj8+DE0Ncte6URVbN++Hd9++2259QKR4uRtnSN0BPq/q82///eTSGEepr99nhcpzsHfo4WOQP83eouH0BHo/7oVCvdz0X/K/Qp77r0rrCrsucvTxzXu5V9s2LABzZo1Q9WqVREYGIiffvpJbp+VvLw8JCcnY8mSJRgzZozKFzZERERERKpE4QsKfIjY2Fj07NkTjo6O+PHHHzFlyhTMmzdPdnzZsmWoV68eatasiZkzZwoXlEr566+/oK+v/8YbEREREX0YbuJZyYelUeXx4sULPHr06I3H/215cVXEYWkfDw5L+7hwWNrHg8PSPh4clvbxEHJYWr/Jb97I+UP9scq6wp67PFWqYWlUeeno6LCAISIiIqpAlamHpaJUqmFpREREREREb8KeGyIiIiIiJSCRVp7NNisKixsiIiIiIiXAYWkclkZEREREREqCPTdEREREREqAPTfsuSEiIiIiIiXBnhsiIiIiIiXA7SvZc0NEREREREqCPTdEREREREpAIuFS0Oy5ISIiIiIipcCeGyIiIiIiJcDV0thzQ0RERERESoI9N0RERERESkAq5ZwbFjdEREREREqAw9I4LI2IiIiIiJQEe26IiIiIiJQAe27Yc0NEREREREqCPTdEREREREpAwgUF2HNDRERERETKgT03RERERERKgHNu2HNDRERERERKgj03RERERERKQCrhnBsWN0RERERESoDD0jgsjYiIiIiIlAR7boiIiIiIlICUS0Gz54aIiIiIiJQDe26IiIiIiJSAhHNu2HNDRERERETKgT03RERERERKgEtBs+eGiIiIiIiUBHtuiIiIiIiUAPe5YXFDRERERKQUuBQ0h6UREREREZGSYM8NEREREZES4LA09twQEREREZGSYM8NEREREZES4FLQ7LkhIiIiIiIlIZJKpRycR0QVoqCgAIsXL8bMmTOhpaUldByVxvfi48H34uPB9+LjwveDygOLGyKqMNnZ2TAyMkJWVhYMDQ2FjqPS+F58PPhefDz4Xnxc+H5QeeCwNCIiIiIiUgosboiIiIiI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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
        "from statsmodels.tools.tools import add_constant\n",
        "import pandas as pd\n",
        "\n",
        "X = df[['Square Footage', 'Number of Occupants','Appliances Used','Average Temperature']]\n",
        "#X = add_constant(X)\n",
        "\n",
        "vif_df = pd.DataFrame()\n",
        "vif_df[\"feature\"] = X.columns\n",
        "vif_df[\"VIF\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n",
        "print(vif_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nCOz4jKqeJDN",
        "outputId": "b80800b0-0b5e-41fb-e59f-4ab249d65cd6"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               feature       VIF\n",
            "0       Square Footage  3.727783\n",
            "1  Number of Occupants  3.041736\n",
            "2      Appliances Used  3.493735\n",
            "3  Average Temperature  5.620082\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#drop avg temp\n",
        "import pandas as pd\n",
        "X = df[['Square Footage', 'Number of Occupants','Appliances Used']]\n",
        "#X = add_constant(X)\n",
        "\n",
        "vif_df = pd.DataFrame()\n",
        "vif_df[\"feature\"] = X.columns\n",
        "vif_df[\"VIF\"] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n",
        "vif_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "9tv7cYh0efuW",
        "outputId": "67aac7f0-72cc-4b9a-c90d-2f430d5c2552"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               feature       VIF\n",
              "0       Square Footage  2.661239\n",
              "1  Number of Occupants  2.718022\n",
              "2      Appliances Used  2.931029"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc5032eb-7855-456e-bb3d-f094cd0ca99d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>feature</th>\n",
              "      <th>VIF</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Square Footage</td>\n",
              "      <td>2.661239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Number of Occupants</td>\n",
              "      <td>2.718022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Appliances Used</td>\n",
              "      <td>2.931029</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc5032eb-7855-456e-bb3d-f094cd0ca99d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bc5032eb-7855-456e-bb3d-f094cd0ca99d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bc5032eb-7855-456e-bb3d-f094cd0ca99d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b7156688-828d-481b-9769-ac6b545f31a9\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7156688-828d-481b-9769-ac6b545f31a9')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b7156688-828d-481b-9769-ac6b545f31a9 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_bf71c1ac-a16d-42aa-ba0d-79b21c0d7e5a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('vif_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_bf71c1ac-a16d-42aa-ba0d-79b21c0d7e5a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('vif_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "vif_df",
              "summary": "{\n  \"name\": \"vif_df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"feature\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Square Footage\",\n          \"Number of Occupants\",\n          \"Appliances Used\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIF\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14223374915064366,\n        \"min\": 2.6612390701869884,\n        \"max\": 2.931028843359978,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.6612390701869884,\n          2.7180223256882545,\n          2.931028843359978\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: train test splity with X and y\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2, random_state=42)\n",
        "\n",
        "print(\"X_train shape:\", X_train.shape)\n",
        "print(\"X_test shape:\", X_test.shape)\n",
        "print(\"y_train shape:\", y_train.shape)\n",
        "print(\"y_test shape:\", y_test.shape)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MJYL5j9Fe9iT",
        "outputId": "e55d06d2-3c4c-420a-a379-ed2b38d475b2"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "X_train shape: (80, 3)\n",
            "X_test shape: (20, 3)\n",
            "y_train shape: (80,)\n",
            "y_test shape: (20,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: X_cat drop\n",
        "X_cat = df.copy()\n",
        "\n",
        "X_cat.drop(['Square Footage', 'Number of Occupants','Appliances Used','Average Temperature','Energy Consumption'], axis=1, inplace=True)\n",
        "X_cat.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "_614Ew7CfQ6j",
        "outputId": "e76917e8-40cd-4358-fc32-9dca381515b3"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Building Type Day of Week\n",
              "0   Residential     Weekday\n",
              "1    Commercial     Weekend\n",
              "2    Commercial     Weekday\n",
              "3   Residential     Weekend\n",
              "4   Residential     Weekday"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aa8ad793-5459-4ab3-ade6-cbcf31cd2219\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Building Type</th>\n",
              "      <th>Day of Week</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Residential</td>\n",
              "      <td>Weekday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>Weekend</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>Weekday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Residential</td>\n",
              "      <td>Weekend</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Residential</td>\n",
              "      <td>Weekday</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa8ad793-5459-4ab3-ade6-cbcf31cd2219')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-aa8ad793-5459-4ab3-ade6-cbcf31cd2219 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-aa8ad793-5459-4ab3-ade6-cbcf31cd2219');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-5387fd33-af0c-4e06-8f0c-018877e64781\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5387fd33-af0c-4e06-8f0c-018877e64781')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-5387fd33-af0c-4e06-8f0c-018877e64781 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_cat",
              "summary": "{\n  \"name\": \"X_cat\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Building Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Residential\",\n          \"Commercial\",\n          \"Industrial\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day of Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Weekend\",\n          \"Weekday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: X_cat Value counts for each feature independently\n",
        "\n",
        "for column in X_cat.columns:\n",
        "    print(f\"Value counts for feature: {column}\")\n",
        "    print(X_cat[column].value_counts())\n",
        "    print(\"\\n\" + \"=\"*30 + \"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bBR7_UJmg8iT",
        "outputId": "e8d79f41-5834-4165-de4e-3e2333197dca"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Value counts for feature: Building Type\n",
            "Building Type\n",
            "Residential    40\n",
            "Industrial     34\n",
            "Commercial     26\n",
            "Name: count, dtype: int64\n",
            "\n",
            "==============================\n",
            "\n",
            "Value counts for feature: Day of Week\n",
            "Day of Week\n",
            "Weekend    56\n",
            "Weekday    44\n",
            "Name: count, dtype: int64\n",
            "\n",
            "==============================\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: distribution of X_cat with respect to Energy Consumption\n",
        "\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "def create_categorical_plots(df, target_column):\n",
        "\n",
        "    for col in df.columns:\n",
        "        plt.figure(figsize=(8, 5))\n",
        "        sns.countplot(data=df, x=col, hue=target_column, palette='viridis')\n",
        "        plt.title(f'Distribution of {col} with respect to {target_column}')\n",
        "        plt.xlabel(col)\n",
        "        plt.ylabel('Count')\n",
        "        plt.xticks(rotation=45, ha='right')\n",
        "        plt.tight_layout()\n",
        "        plt.show()\n",
        "\n",
        "create_categorical_plots(X_cat, y_encoded)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 969
        },
        "id": "bUrZwfIyhDms",
        "outputId": "bdf7ecb0-51df-418e-d8c0-addd608c2905"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.crosstab(df['Building Type'], df['Energy Consumption'], normalize='index')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 230
        },
        "id": "_dhkj526iSg7",
        "outputId": "f7d2dee3-2420-4298-feaf-390add8c131f"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Energy Consumption  2351.97  2394.37  2405.34  2668.06  2725.89  2731.87  \\\n",
              "Building Type                                                              \n",
              "Commercial            0.000    0.000    0.000    0.000    0.000    0.000   \n",
              "Industrial            0.000    0.000    0.000    0.000    0.000    0.000   \n",
              "Residential           0.025    0.025    0.025    0.025    0.025    0.025   \n",
              "\n",
              "Energy Consumption   2843.60  2865.57  2872.05  2998.47   3010.81   3039.52  \\\n",
              "Building Type                                                                 \n",
              "Commercial          0.038462    0.000    0.000    0.000  0.038462  0.038462   \n",
              "Industrial          0.000000    0.000    0.000    0.000  0.000000  0.000000   \n",
              "Residential         0.000000    0.025    0.025    0.025  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption  3072.63  3112.64   3127.82  3160.27  3163.44   3348.39  \\\n",
              "Building Type                                                                \n",
              "Commercial            0.000    0.000  0.000000    0.000    0.000  0.000000   \n",
              "Industrial            0.000    0.000  0.029412    0.000    0.000  0.029412   \n",
              "Residential           0.025    0.025  0.000000    0.025    0.025  0.000000   \n",
              "\n",
              "Energy Consumption   3375.06  3388.29  3451.58  3506.64   3509.64  3562.43  \\\n",
              "Building Type                                                                \n",
              "Commercial          0.038462    0.000    0.000    0.000  0.038462    0.000   \n",
              "Industrial          0.000000    0.000    0.000    0.000  0.000000    0.000   \n",
              "Residential         0.000000    0.025    0.025    0.025  0.000000    0.025   \n",
              "\n",
              "Energy Consumption  3598.87   3629.61  3694.52   3758.95   3810.09  3830.68  \\\n",
              "Building Type                                                                 \n",
              "Commercial            0.000  0.000000    0.000  0.038462  0.000000    0.000   \n",
              "Industrial            0.000  0.029412    0.000  0.000000  0.029412    0.000   \n",
              "Residential           0.025  0.000000    0.025  0.000000  0.000000    0.025   \n",
              "\n",
              "Energy Consumption  3840.20  3844.00   3908.00   3969.09  3977.63  3980.90  \\\n",
              "Building Type                                                                \n",
              "Commercial            0.000    0.000  0.000000  0.000000    0.000    0.000   \n",
              "Industrial            0.000    0.000  0.029412  0.029412    0.000    0.000   \n",
              "Residential           0.025    0.025  0.000000  0.000000    0.025    0.025   \n",
              "\n",
              "Energy Consumption   3999.14   4001.96   4003.54   4009.80   4039.98  \\\n",
              "Building Type                                                          \n",
              "Commercial          0.038462  0.038462  0.038462  0.000000  0.000000   \n",
              "Industrial          0.000000  0.000000  0.000000  0.029412  0.029412   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   4046.88   4050.80   4068.94   4103.39   4137.66  4149.12  \\\n",
              "Building Type                                                                   \n",
              "Commercial          0.000000  0.000000  0.038462  0.000000  0.000000    0.000   \n",
              "Industrial          0.029412  0.029412  0.000000  0.029412  0.029412    0.000   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000    0.025   \n",
              "\n",
              "Energy Consumption  4193.36  4205.35  4248.49   4250.29  4275.65  4276.25  \\\n",
              "Building Type                                                               \n",
              "Commercial            0.000    0.000    0.000  0.000000    0.000    0.000   \n",
              "Industrial            0.000    0.000    0.000  0.029412    0.000    0.000   \n",
              "Residential           0.025    0.025    0.025  0.000000    0.025    0.025   \n",
              "\n",
              "Energy Consumption   4283.80  4294.59   4374.35   4379.87   4400.48  4404.56  \\\n",
              "Building Type                                                                  \n",
              "Commercial          0.038462    0.000  0.000000  0.000000  0.000000    0.000   \n",
              "Industrial          0.000000    0.000  0.029412  0.029412  0.029412    0.000   \n",
              "Residential         0.000000    0.025  0.000000  0.000000  0.000000    0.025   \n",
              "\n",
              "Energy Consumption  4428.85   4474.98   4491.97   4510.20   4575.58  4603.83  \\\n",
              "Building Type                                                                  \n",
              "Commercial            0.000  0.000000  0.038462  0.038462  0.000000    0.000   \n",
              "Industrial            0.000  0.029412  0.000000  0.000000  0.029412    0.000   \n",
              "Residential           0.025  0.000000  0.000000  0.000000  0.000000    0.025   \n",
              "\n",
              "Energy Consumption   4612.04  4618.77  4624.30   4652.65   4656.29   4707.07  \\\n",
              "Building Type                                                                  \n",
              "Commercial          0.038462    0.000    0.000  0.038462  0.000000  0.038462   \n",
              "Industrial          0.000000    0.000    0.000  0.000000  0.029412  0.000000   \n",
              "Residential         0.000000    0.025    0.025  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   4721.39  4722.59   4779.08  4789.37  4820.59  4897.66  \\\n",
              "Building Type                                                                \n",
              "Commercial          0.000000    0.000  0.000000    0.000    0.000    0.000   \n",
              "Industrial          0.029412    0.000  0.029412    0.000    0.000    0.000   \n",
              "Residential         0.000000    0.025  0.000000    0.025    0.025    0.025   \n",
              "\n",
              "Energy Consumption   4921.73   4939.07   4983.43   4987.52   4991.64  \\\n",
              "Building Type                                                          \n",
              "Commercial          0.038462  0.000000  0.038462  0.000000  0.038462   \n",
              "Industrial          0.000000  0.029412  0.000000  0.029412  0.000000   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   5014.79   5016.11   5026.23   5067.83   5116.90  \\\n",
              "Building Type                                                          \n",
              "Commercial          0.000000  0.000000  0.000000  0.038462  0.000000   \n",
              "Industrial          0.029412  0.029412  0.029412  0.000000  0.029412   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   5136.69   5161.94   5162.33   5172.77   5179.49  \\\n",
              "Building Type                                                          \n",
              "Commercial          0.000000  0.000000  0.038462  0.000000  0.000000   \n",
              "Industrial          0.029412  0.029412  0.000000  0.029412  0.029412   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   5275.92   5334.33   5346.06   5446.00   5508.64  \\\n",
              "Building Type                                                          \n",
              "Commercial          0.038462  0.038462  0.038462  0.000000  0.000000   \n",
              "Industrial          0.000000  0.000000  0.000000  0.029412  0.029412   \n",
              "Residential         0.000000  0.000000  0.000000  0.000000  0.000000   \n",
              "\n",
              "Energy Consumption   5611.18   5900.32   6042.56  \n",
              "Building Type                                     \n",
              "Commercial          0.038462  0.000000  0.038462  \n",
              "Industrial          0.000000  0.029412  0.000000  \n",
              "Residential         0.000000  0.000000  0.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a35d87cc-5aeb-46af-885c-20ba783219b9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Energy Consumption</th>\n",
              "      <th>2351.97</th>\n",
              "      <th>2394.37</th>\n",
              "      <th>2405.34</th>\n",
              "      <th>2668.06</th>\n",
              "      <th>2725.89</th>\n",
              "      <th>2731.87</th>\n",
              "      <th>2843.60</th>\n",
              "      <th>2865.57</th>\n",
              "      <th>2872.05</th>\n",
              "      <th>2998.47</th>\n",
              "      <th>3010.81</th>\n",
              "      <th>3039.52</th>\n",
              "      <th>3072.63</th>\n",
              "      <th>3112.64</th>\n",
              "      <th>3127.82</th>\n",
              "      <th>3160.27</th>\n",
              "      <th>3163.44</th>\n",
              "      <th>3348.39</th>\n",
              "      <th>3375.06</th>\n",
              "      <th>3388.29</th>\n",
              "      <th>3451.58</th>\n",
              "      <th>3506.64</th>\n",
              "      <th>3509.64</th>\n",
              "      <th>3562.43</th>\n",
              "      <th>3598.87</th>\n",
              "      <th>3629.61</th>\n",
              "      <th>3694.52</th>\n",
              "      <th>3758.95</th>\n",
              "      <th>3810.09</th>\n",
              "      <th>3830.68</th>\n",
              "      <th>3840.20</th>\n",
              "      <th>3844.00</th>\n",
              "      <th>3908.00</th>\n",
              "      <th>3969.09</th>\n",
              "      <th>3977.63</th>\n",
              "      <th>3980.90</th>\n",
              "      <th>3999.14</th>\n",
              "      <th>4001.96</th>\n",
              "      <th>4003.54</th>\n",
              "      <th>4009.80</th>\n",
              "      <th>4039.98</th>\n",
              "      <th>4046.88</th>\n",
              "      <th>4050.80</th>\n",
              "      <th>4068.94</th>\n",
              "      <th>4103.39</th>\n",
              "      <th>4137.66</th>\n",
              "      <th>4149.12</th>\n",
              "      <th>4193.36</th>\n",
              "      <th>4205.35</th>\n",
              "      <th>4248.49</th>\n",
              "      <th>4250.29</th>\n",
              "      <th>4275.65</th>\n",
              "      <th>4276.25</th>\n",
              "      <th>4283.80</th>\n",
              "      <th>4294.59</th>\n",
              "      <th>4374.35</th>\n",
              "      <th>4379.87</th>\n",
              "      <th>4400.48</th>\n",
              "      <th>4404.56</th>\n",
              "      <th>4428.85</th>\n",
              "      <th>4474.98</th>\n",
              "      <th>4491.97</th>\n",
              "      <th>4510.20</th>\n",
              "      <th>4575.58</th>\n",
              "      <th>4603.83</th>\n",
              "      <th>4612.04</th>\n",
              "      <th>4618.77</th>\n",
              "      <th>4624.30</th>\n",
              "      <th>4652.65</th>\n",
              "      <th>4656.29</th>\n",
              "      <th>4707.07</th>\n",
              "      <th>4721.39</th>\n",
              "      <th>4722.59</th>\n",
              "      <th>4779.08</th>\n",
              "      <th>4789.37</th>\n",
              "      <th>4820.59</th>\n",
              "      <th>4897.66</th>\n",
              "      <th>4921.73</th>\n",
              "      <th>4939.07</th>\n",
              "      <th>4983.43</th>\n",
              "      <th>4987.52</th>\n",
              "      <th>4991.64</th>\n",
              "      <th>5014.79</th>\n",
              "      <th>5016.11</th>\n",
              "      <th>5026.23</th>\n",
              "      <th>5067.83</th>\n",
              "      <th>5116.90</th>\n",
              "      <th>5136.69</th>\n",
              "      <th>5161.94</th>\n",
              "      <th>5162.33</th>\n",
              "      <th>5172.77</th>\n",
              "      <th>5179.49</th>\n",
              "      <th>5275.92</th>\n",
              "      <th>5334.33</th>\n",
              "      <th>5346.06</th>\n",
              "      <th>5446.00</th>\n",
              "      <th>5508.64</th>\n",
              "      <th>5611.18</th>\n",
              "      <th>5900.32</th>\n",
              "      <th>6042.56</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Building Type</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Commercial</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.038462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Industrial</th>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.029412</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Residential</th>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.025</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a35d87cc-5aeb-46af-885c-20ba783219b9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a35d87cc-5aeb-46af-885c-20ba783219b9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a35d87cc-5aeb-46af-885c-20ba783219b9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-ad4e9378-cfe8-4f0f-bf8f-4a6a7b01fbe3\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad4e9378-cfe8-4f0f-bf8f-4a6a7b01fbe3')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-ad4e9378-cfe8-4f0f-bf8f-4a6a7b01fbe3 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(pd.crosstab(df['Appliances Used'], df['Energy Consumption'], normalize='index'))\n",
        "print(pd.crosstab(df['Square Footage'], df['Energy Consumption'], normalize='index'))\n",
        "print(pd.crosstab(df['Average Temperature'], df['Energy Consumption'], normalize='index'))\n",
        "print(pd.crosstab(df['Number of Occupants'],df['Energy Consumption'],normalize='index'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qb8DRS6oinkj",
        "outputId": "290b3c2c-cf17-4800-bc5a-d4e02b792f48"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Energy Consumption  2351.97  2394.37   2405.34   2668.06   2725.89  2731.87  \\\n",
            "Appliances Used                                                               \n",
            "1                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "2                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "3                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "4                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "5                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "8                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "9                       0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "11                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "12                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "13                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "14                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "15                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "16                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "17                      0.0      0.0  0.000000  0.000000  0.000000      0.2   \n",
            "18                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "19                      0.0      0.5  0.000000  0.000000  0.000000      0.0   \n",
            "20                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "21                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "22                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "23                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "24                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "25                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "26                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "27                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "28                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "29                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "30                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "31                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "32                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "33                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "35                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "36                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "37                      0.0      0.0  0.000000  0.333333  0.000000      0.0   \n",
            "38                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "39                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "40                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "41                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "42                      0.0      0.0  0.333333  0.000000  0.000000      0.0   \n",
            "43                      0.5      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "44                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "45                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "46                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "47                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "48                      0.0      0.0  0.000000  0.000000  0.000000      0.0   \n",
            "49                      0.0      0.0  0.000000  0.000000  0.333333      0.0   \n",
            "\n",
            "Energy Consumption  2843.60  2865.57   2872.05  2998.47  3010.81  3039.52  \\\n",
            "Appliances Used                                                             \n",
            "1                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "2                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "3                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "4                       0.0      0.5  0.000000      0.0     0.00     0.00   \n",
            "5                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "8                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "9                       0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "11                      0.0      0.0  0.000000      0.0     0.25     0.00   \n",
            "12                      0.0      0.0  0.333333      0.0     0.00     0.00   \n",
            "13                      0.0      0.0  0.000000      1.0     0.00     0.00   \n",
            "14                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "15                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "16                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "17                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "18                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "19                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "20                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "21                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "22                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "23                      0.0      0.0  0.000000      0.0     0.00     0.25   \n",
            "24                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "25                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "26                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "27                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "28                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "29                      1.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "30                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "31                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "32                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "33                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "35                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "36                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "37                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "38                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "39                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "40                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "41                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "42                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "43                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "44                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "45                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "46                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "47                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "48                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "49                      0.0      0.0  0.000000      0.0     0.00     0.00   \n",
            "\n",
            "Energy Consumption   3072.63   3112.64  3127.82  3160.27  3163.44   3348.39  \\\n",
            "Appliances Used                                                               \n",
            "1                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "2                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "3                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "4                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "5                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "8                   0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "9                   0.000000  0.000000      1.0      0.0      0.0  0.000000   \n",
            "11                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "12                  0.000000  0.000000      0.0      0.0      0.0  0.333333   \n",
            "13                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "14                  0.000000  0.000000      0.0      1.0      0.0  0.000000   \n",
            "15                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "16                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "17                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "18                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "19                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "20                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "21                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "22                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "23                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "24                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "25                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "26                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "27                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "28                  0.000000  0.000000      0.0      0.0      0.2  0.000000   \n",
            "29                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "30                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "31                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "32                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "33                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "35                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "36                  0.333333  0.000000      0.0      0.0      0.0  0.000000   \n",
            "37                  0.000000  0.333333      0.0      0.0      0.0  0.000000   \n",
            "38                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "39                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "40                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "41                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "42                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "43                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "44                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "45                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "46                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "47                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "48                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "49                  0.000000  0.000000      0.0      0.0      0.0  0.000000   \n",
            "\n",
            "Energy Consumption  3375.06  3388.29  3451.58   3506.64  3509.64  3562.43  \\\n",
            "Appliances Used                                                             \n",
            "1                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "2                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "3                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "4                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "5                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "8                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "9                       0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "11                      0.0      0.0     0.25  0.000000      0.0      0.0   \n",
            "12                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "13                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "14                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "15                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "16                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "17                      0.0      0.0     0.00  0.000000      0.2      0.0   \n",
            "18                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "19                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "20                      0.0      0.0     0.00  0.000000      0.0      0.5   \n",
            "21                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "22                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "23                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "24                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "25                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "26                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "27                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "28                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "29                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "30                      0.5      0.0     0.00  0.000000      0.0      0.0   \n",
            "31                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "32                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "33                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "35                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "36                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "37                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "38                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "39                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "40                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "41                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "42                      0.0      0.0     0.00  0.333333      0.0      0.0   \n",
            "43                      0.0      0.5     0.00  0.000000      0.0      0.0   \n",
            "44                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "45                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "46                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "47                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "48                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "49                      0.0      0.0     0.00  0.000000      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3598.87  3629.61  3694.52   3758.95  3810.09   3830.68  \\\n",
            "Appliances Used                                                              \n",
            "1                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "2                       0.0      0.0      0.0  0.000000      0.0  0.333333   \n",
            "3                       0.0      0.0      0.5  0.000000      0.0  0.000000   \n",
            "4                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "5                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "8                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "9                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "11                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "12                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "13                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "14                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "15                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "16                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "17                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "18                      0.0      0.5      0.0  0.000000      0.0  0.000000   \n",
            "19                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "20                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "21                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "22                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "23                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "24                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "25                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "26                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "27                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "28                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "29                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "30                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "31                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "32                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "33                      1.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "35                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "36                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "37                      0.0      0.0      0.0  0.333333      0.0  0.000000   \n",
            "38                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "39                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "40                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "41                      0.0      0.0      0.0  0.000000      0.5  0.000000   \n",
            "42                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "43                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "44                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "45                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "46                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "47                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "48                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "49                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "\n",
            "Energy Consumption   3840.20  3844.00  3908.00  3969.09  3977.63  3980.90  \\\n",
            "Appliances Used                                                             \n",
            "1                   0.000000      0.0      0.5      0.0     0.00      0.0   \n",
            "2                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "3                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "4                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "5                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "8                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "9                   0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "11                  0.000000      0.0      0.0      0.0     0.25      0.0   \n",
            "12                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "13                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "14                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "15                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "16                  0.000000      0.5      0.0      0.5     0.00      0.0   \n",
            "17                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "18                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "19                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "20                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "21                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "22                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "23                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "24                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "25                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "26                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "27                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "28                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "29                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "30                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "31                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "32                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "33                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "35                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "36                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "37                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "38                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "39                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "40                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "41                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "42                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "43                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "44                  0.000000      0.0      0.0      0.0     0.00      0.2   \n",
            "45                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "46                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "47                  0.333333      0.0      0.0      0.0     0.00      0.0   \n",
            "48                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "49                  0.000000      0.0      0.0      0.0     0.00      0.0   \n",
            "\n",
            "Energy Consumption   3999.14  4001.96  4003.54  4009.80  4039.98  4046.88  \\\n",
            "Appliances Used                                                             \n",
            "1                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "2                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "3                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "4                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "5                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "8                   0.000000      0.0      0.0      0.5      0.0      0.0   \n",
            "9                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "11                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "12                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "13                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "14                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "15                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "16                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "17                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "18                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "19                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "20                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "21                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "22                  0.000000      1.0      0.0      0.0      0.0      0.0   \n",
            "23                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "24                  0.333333      0.0      0.0      0.0      0.0      0.0   \n",
            "25                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "26                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "27                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "28                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "29                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "30                  0.000000      0.0      0.0      0.0      0.0      0.5   \n",
            "31                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "32                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "33                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "35                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "36                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "37                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "38                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "39                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "40                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "41                  0.000000      0.0      0.0      0.0      0.5      0.0   \n",
            "42                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "43                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "44                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "45                  0.000000      0.0      0.5      0.0      0.0      0.0   \n",
            "46                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "47                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "48                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "49                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4050.80  4068.94   4103.39  4137.66   4149.12  4193.36  \\\n",
            "Appliances Used                                                              \n",
            "1                       0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "2                       0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "3                       0.0      0.0  0.000000      0.5  0.000000      0.0   \n",
            "4                       0.0      0.5  0.000000      0.0  0.000000      0.0   \n",
            "5                       0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "8                       0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "9                       0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "11                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "12                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "13                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "14                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "15                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "16                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "17                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "18                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "19                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "20                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "21                      0.5      0.0  0.000000      0.0  0.000000      0.5   \n",
            "22                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "23                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "24                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "25                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "26                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "27                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "28                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "29                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "30                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "31                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "32                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "33                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "35                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "36                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "37                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "38                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "39                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "40                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "41                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "42                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "43                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "44                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "45                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "46                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "47                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "48                      0.0      0.0  0.000000      0.0  0.000000      0.0   \n",
            "49                      0.0      0.0  0.333333      0.0  0.333333      0.0   \n",
            "\n",
            "Energy Consumption  4205.35  4248.49   4250.29  4275.65  4276.25  4283.80  \\\n",
            "Appliances Used                                                             \n",
            "1                       0.5     0.00  0.000000      0.0      0.0     0.00   \n",
            "2                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "3                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "4                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "5                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "8                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "9                       0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "11                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "12                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "13                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "14                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "15                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "16                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "17                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "18                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "19                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "20                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "21                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "22                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "23                      0.0     0.25  0.000000      0.0      0.0     0.25   \n",
            "24                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "25                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "26                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "27                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "28                      0.0     0.00  0.000000      0.2      0.0     0.00   \n",
            "29                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "30                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "31                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "32                      0.0     0.00  0.000000      0.0      0.5     0.00   \n",
            "33                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "35                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "36                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "37                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "38                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "39                      0.0     0.00  0.333333      0.0      0.0     0.00   \n",
            "40                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "41                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "42                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "43                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "44                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "45                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "46                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "47                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "48                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "49                      0.0     0.00  0.000000      0.0      0.0     0.00   \n",
            "\n",
            "Energy Consumption  4294.59   4374.35   4379.87  4400.48  4404.56  4428.85  \\\n",
            "Appliances Used                                                              \n",
            "1                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "2                       0.0  0.333333  0.000000      0.0      0.0     0.00   \n",
            "3                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "4                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "5                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "8                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "9                       0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "11                      0.0  0.000000  0.000000      0.0      0.0     0.25   \n",
            "12                      0.0  0.000000  0.333333      0.0      0.0     0.00   \n",
            "13                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "14                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "15                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "16                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "17                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "18                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "19                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "20                      0.0  0.000000  0.000000      0.5      0.0     0.00   \n",
            "21                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "22                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "23                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "24                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "25                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "26                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "27                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "28                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "29                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "30                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "31                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "32                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "33                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "35                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "36                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "37                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "38                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "39                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "40                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "41                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "42                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "43                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "44                      0.2  0.000000  0.000000      0.0      0.2     0.00   \n",
            "45                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "46                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "47                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "48                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "49                      0.0  0.000000  0.000000      0.0      0.0     0.00   \n",
            "\n",
            "Energy Consumption  4474.98  4491.97  4510.20  4575.58  4603.83  4612.04  \\\n",
            "Appliances Used                                                            \n",
            "1                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                       0.0      1.0      0.0      0.0      0.0      0.0   \n",
            "8                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "9                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "12                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "13                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "14                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "15                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "16                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "17                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "18                      0.0      0.0      0.0      0.5      0.0      0.0   \n",
            "19                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "20                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "21                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "22                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "23                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "24                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "25                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "26                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "27                      0.5      0.0      0.0      0.0      0.0      0.5   \n",
            "28                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "29                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "30                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "31                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "32                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "35                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "36                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "37                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "38                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "39                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "40                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "41                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "42                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "43                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "44                      0.0      0.0      0.0      0.0      0.2      0.0   \n",
            "45                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46                      0.0      0.0      0.5      0.0      0.0      0.0   \n",
            "47                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49                      0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4618.77  4624.30  4652.65  4656.29  4707.07  4721.39  \\\n",
            "Appliances Used                                                             \n",
            "1                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "2                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "3                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "4                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "5                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "8                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "9                   0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "11                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "12                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "13                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "14                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "15                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "16                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "17                  0.000000      0.2      0.2      0.0      0.0      0.0   \n",
            "18                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "19                  0.000000      0.0      0.0      0.0      0.5      0.0   \n",
            "20                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "21                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "22                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "23                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "24                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "25                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "26                  0.000000      0.0      0.0      1.0      0.0      0.0   \n",
            "27                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "28                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "29                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "30                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "31                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "32                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "33                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "35                  0.000000      0.0      0.0      0.0      0.0      0.5   \n",
            "36                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "37                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "38                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "39                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "40                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "41                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "42                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "43                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "44                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "45                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "46                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "47                  0.333333      0.0      0.0      0.0      0.0      0.0   \n",
            "48                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "49                  0.000000      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4722.59   4779.08   4789.37   4820.59  4897.66  4921.73  \\\n",
            "Appliances Used                                                                \n",
            "1                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "2                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "3                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "4                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "5                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "8                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "9                   0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "11                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "12                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "13                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "14                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "15                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "16                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "17                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "18                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "19                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "20                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "21                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "22                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "23                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "24                  0.333333  0.333333  0.000000  0.000000      0.0      0.0   \n",
            "25                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "26                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "27                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "28                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "29                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "30                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "31                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "32                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "33                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "35                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "36                  0.000000  0.000000  0.333333  0.000000      0.0      0.0   \n",
            "37                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "38                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "39                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "40                  0.000000  0.000000  0.000000  0.000000      0.0      1.0   \n",
            "41                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "42                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "43                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "44                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "45                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "46                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "47                  0.000000  0.000000  0.000000  0.333333      0.0      0.0   \n",
            "48                  0.000000  0.000000  0.000000  0.000000      0.5      0.0   \n",
            "49                  0.000000  0.000000  0.000000  0.000000      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4939.07  4983.43  4987.52   4991.64  5014.79   5016.11  \\\n",
            "Appliances Used                                                              \n",
            "1                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "2                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "3                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "4                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "5                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "8                       0.5      0.0      0.0  0.000000      0.0  0.000000   \n",
            "9                       0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "11                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "12                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "13                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "14                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "15                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "16                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "17                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "18                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "19                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "20                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "21                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "22                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "23                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "24                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "25                      0.0      0.0      1.0  0.000000      0.0  0.000000   \n",
            "26                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "27                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "28                      0.0      0.2      0.0  0.000000      0.0  0.000000   \n",
            "29                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "30                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "31                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "32                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "33                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "35                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "36                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "37                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "38                      0.0      0.0      0.0  0.000000      0.5  0.000000   \n",
            "39                      0.0      0.0      0.0  0.333333      0.0  0.333333   \n",
            "40                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "41                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "42                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "43                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "44                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "45                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "46                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "47                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "48                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "49                      0.0      0.0      0.0  0.000000      0.0  0.000000   \n",
            "\n",
            "Energy Consumption  5026.23  5067.83  5116.90  5136.69   5161.94  5162.33  \\\n",
            "Appliances Used                                                             \n",
            "1                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "2                       0.0      0.0      0.0      0.0  0.333333      0.0   \n",
            "3                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "4                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "5                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "8                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "9                       0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "11                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "12                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "13                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "14                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "15                      0.0      0.0      0.0      0.0  0.000000      1.0   \n",
            "16                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "17                      0.0      0.0      0.2      0.0  0.000000      0.0   \n",
            "18                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "19                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "20                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "21                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "22                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "23                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "24                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "25                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "26                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "27                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "28                      0.2      0.0      0.0      0.0  0.000000      0.0   \n",
            "29                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "30                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "31                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "32                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "33                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "35                      0.0      0.0      0.0      0.5  0.000000      0.0   \n",
            "36                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "37                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "38                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "39                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "40                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "41                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "42                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "43                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "44                      0.0      0.2      0.0      0.0  0.000000      0.0   \n",
            "45                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "46                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "47                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "48                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "49                      0.0      0.0      0.0      0.0  0.000000      0.0   \n",
            "\n",
            "Energy Consumption  5172.77   5179.49  5275.92  5334.33   5346.06  5446.00  \\\n",
            "Appliances Used                                                              \n",
            "1                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "2                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "3                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "4                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "5                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "8                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "9                       0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "11                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "12                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "13                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "14                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "15                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "16                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "17                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "18                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "19                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "20                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "21                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "22                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "23                      0.0  0.000000      0.0     0.25  0.000000      0.0   \n",
            "24                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "25                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "26                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "27                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "28                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "29                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "30                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "31                      1.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "32                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "33                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "35                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "36                      0.0  0.000000      0.0     0.00  0.333333      0.0   \n",
            "37                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "38                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "39                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "40                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "41                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "42                      0.0  0.333333      0.0     0.00  0.000000      0.0   \n",
            "43                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "44                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "45                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "46                      0.0  0.000000      0.0     0.00  0.000000      0.5   \n",
            "47                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "48                      0.0  0.000000      0.5     0.00  0.000000      0.0   \n",
            "49                      0.0  0.000000      0.0     0.00  0.000000      0.0   \n",
            "\n",
            "Energy Consumption  5508.64  5611.18  5900.32  6042.56  \n",
            "Appliances Used                                         \n",
            "1                       0.0      0.0      0.0      0.0  \n",
            "2                       0.0      0.0      0.0      0.0  \n",
            "3                       0.0      0.0      0.0      0.0  \n",
            "4                       0.0      0.0      0.0      0.0  \n",
            "5                       0.0      0.0      0.0      0.0  \n",
            "8                       0.0      0.0      0.0      0.0  \n",
            "9                       0.0      0.0      0.0      0.0  \n",
            "11                      0.0      0.0      0.0      0.0  \n",
            "12                      0.0      0.0      0.0      0.0  \n",
            "13                      0.0      0.0      0.0      0.0  \n",
            "14                      0.0      0.0      0.0      0.0  \n",
            "15                      0.0      0.0      0.0      0.0  \n",
            "16                      0.0      0.0      0.0      0.0  \n",
            "17                      0.0      0.0      0.0      0.0  \n",
            "18                      0.0      0.0      0.0      0.0  \n",
            "19                      0.0      0.0      0.0      0.0  \n",
            "20                      0.0      0.0      0.0      0.0  \n",
            "21                      0.0      0.0      0.0      0.0  \n",
            "22                      0.0      0.0      0.0      0.0  \n",
            "23                      0.0      0.0      0.0      0.0  \n",
            "24                      0.0      0.0      0.0      0.0  \n",
            "25                      0.0      0.0      0.0      0.0  \n",
            "26                      0.0      0.0      0.0      0.0  \n",
            "27                      0.0      0.0      0.0      0.0  \n",
            "28                      0.2      0.0      0.0      0.0  \n",
            "29                      0.0      0.0      0.0      0.0  \n",
            "30                      0.0      0.0      0.0      0.0  \n",
            "31                      0.0      0.0      0.0      0.0  \n",
            "32                      0.0      0.0      0.5      0.0  \n",
            "33                      0.0      0.0      0.0      0.0  \n",
            "35                      0.0      0.0      0.0      0.0  \n",
            "36                      0.0      0.0      0.0      0.0  \n",
            "37                      0.0      0.0      0.0      0.0  \n",
            "38                      0.0      0.0      0.0      0.5  \n",
            "39                      0.0      0.0      0.0      0.0  \n",
            "40                      0.0      0.0      0.0      0.0  \n",
            "41                      0.0      0.0      0.0      0.0  \n",
            "42                      0.0      0.0      0.0      0.0  \n",
            "43                      0.0      0.0      0.0      0.0  \n",
            "44                      0.0      0.0      0.0      0.0  \n",
            "45                      0.0      0.5      0.0      0.0  \n",
            "46                      0.0      0.0      0.0      0.0  \n",
            "47                      0.0      0.0      0.0      0.0  \n",
            "48                      0.0      0.0      0.0      0.0  \n",
            "49                      0.0      0.0      0.0      0.0  \n",
            "Energy Consumption  2351.97  2394.37  2405.34  2668.06  2725.89  2731.87  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    1.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  2843.60  2865.57  2872.05  2998.47  3010.81  3039.52  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    1.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3072.63  3112.64  3127.82  3160.27  3163.44  3348.39  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3375.06  3388.29  3451.58  3506.64  3509.64  3562.43  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3598.87  3629.61  3694.52  3758.95  3810.09  3830.68  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3840.20  3844.00  3908.00  3969.09  3977.63  3980.90  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  3999.14  4001.96  4003.54  4009.80  4039.98  4046.88  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4050.80  4068.94  4103.39  4137.66  4149.12  4193.36  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4205.35  4248.49  4250.29  4275.65  4276.25  4283.80  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      1.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4294.59  4374.35  4379.87  4400.48  4404.56  4428.85  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4474.98  4491.97  4510.20  4575.58  4603.83  4612.04  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4618.77  4624.30  4652.65  4656.29  4707.07  4721.39  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4722.59  4779.08  4789.37  4820.59  4897.66  4921.73  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  4939.07  4983.43  4987.52  4991.64  5014.79  5016.11  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  5026.23  5067.83  5116.90  5136.69  5161.94  5162.33  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  5172.77  5179.49  5275.92  5334.33  5346.06  5446.00  \\\n",
            "Square Footage                                                             \n",
            "1161                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1306                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1558                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "1636                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "2091                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                     ...      ...      ...      ...      ...      ...   \n",
            "45772                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "46494                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "47042                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "48114                   0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "49354                   0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption  5508.64  5611.18  5900.32  6042.56  \n",
            "Square Footage                                          \n",
            "1161                    0.0      0.0      0.0      0.0  \n",
            "1306                    0.0      0.0      0.0      0.0  \n",
            "1558                    0.0      0.0      0.0      0.0  \n",
            "1636                    0.0      0.0      0.0      0.0  \n",
            "2091                    0.0      0.0      0.0      0.0  \n",
            "...                     ...      ...      ...      ...  \n",
            "45772                   0.0      1.0      0.0      0.0  \n",
            "46494                   0.0      0.0      0.0      0.0  \n",
            "47042                   0.0      0.0      1.0      0.0  \n",
            "48114                   0.0      0.0      0.0      0.0  \n",
            "49354                   0.0      0.0      0.0      1.0  \n",
            "\n",
            "[99 rows x 100 columns]\n",
            "Energy Consumption   2351.97  2394.37  2405.34  2668.06  2725.89  2731.87  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   2843.60  2865.57  2872.05  2998.47  3010.81  3039.52  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3072.63  3112.64  3127.82  3160.27  3163.44  3348.39  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    1.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3375.06  3388.29  3451.58  3506.64  3509.64  3562.43  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    1.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3598.87  3629.61  3694.52  3758.95  3810.09  3830.68  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3840.20  3844.00  3908.00  3969.09  3977.63  3980.90  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3999.14  4001.96  4003.54  4009.80  4039.98  4046.88  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      1.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4050.80  4068.94  4103.39  4137.66  4149.12  4193.36  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.5      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4205.35  4248.49  4250.29  4275.65  4276.25  4283.80  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4294.59  4374.35  4379.87  4400.48  4404.56  4428.85  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4474.98  4491.97  4510.20  4575.58  4603.83  4612.04  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4618.77  4624.30  4652.65  4656.29  4707.07  4721.39  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.5   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4722.59  4779.08  4789.37  4820.59  4897.66  4921.73  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4939.07  4983.43  4987.52  4991.64  5014.79  5016.11  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5026.23  5067.83  5116.90  5136.69  5161.94  5162.33  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      1.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5172.77  5179.49  5275.92  5334.33  5346.06  5446.00  \\\n",
            "Average Temperature                                                         \n",
            "10.40                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "10.77                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.04                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.13                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "11.17                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "33.50                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "33.56                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.36                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.55                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "34.71                    0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5508.64  5611.18  5900.32  6042.56  \n",
            "Average Temperature                                      \n",
            "10.40                    0.0      0.0      0.0      0.0  \n",
            "10.77                    0.0      0.0      0.0      0.0  \n",
            "11.04                    0.0      0.0      0.0      0.0  \n",
            "11.13                    0.0      0.0      0.0      0.0  \n",
            "11.17                    0.0      0.0      0.0      0.0  \n",
            "...                      ...      ...      ...      ...  \n",
            "33.50                    0.0      0.0      0.0      0.0  \n",
            "33.56                    0.0      0.0      0.0      0.0  \n",
            "34.36                    0.0      0.0      1.0      0.0  \n",
            "34.55                    0.0      0.0      0.0      0.0  \n",
            "34.71                    0.0      0.0      0.0      0.0  \n",
            "\n",
            "[99 rows x 100 columns]\n",
            "Energy Consumption   2351.97  2394.37  2405.34  2668.06  2725.89  2731.87  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      1.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   2843.60  2865.57  2872.05  2998.47  3010.81  3039.52  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3072.63   3112.64  3127.82  3160.27  3163.44  3348.39  \\\n",
            "Number of Occupants                                                          \n",
            "2                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "3                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "4                        0.0  0.333333      0.0      0.0      0.0      0.0   \n",
            "5                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "6                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "...                      ...       ...      ...      ...      ...      ...   \n",
            "92                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "96                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "97                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "98                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "99                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3375.06  3388.29  3451.58  3506.64  3509.64  3562.43  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      1.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3598.87  3629.61  3694.52  3758.95  3810.09  3830.68  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3840.20  3844.00  3908.00  3969.09  3977.63  3980.90  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   3999.14  4001.96  4003.54  4009.80  4039.98  4046.88  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4050.80  4068.94  4103.39  4137.66  4149.12  4193.36  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4205.35  4248.49  4250.29  4275.65  4276.25  4283.80  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.5      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.5      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4294.59   4374.35  4379.87  4400.48  4404.56  4428.85  \\\n",
            "Number of Occupants                                                          \n",
            "2                        0.0  0.000000      0.0      1.0      0.0      0.0   \n",
            "3                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "4                        0.0  0.333333      0.0      0.0      0.0      0.0   \n",
            "5                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "6                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "...                      ...       ...      ...      ...      ...      ...   \n",
            "92                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "96                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "97                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "98                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "99                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4474.98  4491.97  4510.20  4575.58  4603.83  4612.04  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4618.77  4624.30  4652.65  4656.29  4707.07  4721.39  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.5      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4722.59  4779.08  4789.37  4820.59  4897.66  4921.73  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      1.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   4939.07  4983.43  4987.52  4991.64  5014.79  5016.11  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      1.0      0.0   \n",
            "6                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5026.23   5067.83  5116.90  5136.69  5161.94  5162.33  \\\n",
            "Number of Occupants                                                          \n",
            "2                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "3                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "4                        0.0  0.333333      0.0      0.0      0.0      0.0   \n",
            "5                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "6                        0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "...                      ...       ...      ...      ...      ...      ...   \n",
            "92                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "96                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "97                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "98                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "99                       0.0  0.000000      0.0      0.0      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5172.77  5179.49  5275.92  5334.33  5346.06  5446.00  \\\n",
            "Number of Occupants                                                         \n",
            "2                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "3                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "4                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "5                        0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "6                        1.0      0.0      0.0      0.0      0.0      0.0   \n",
            "...                      ...      ...      ...      ...      ...      ...   \n",
            "92                       0.0      1.0      0.0      0.0      0.0      0.0   \n",
            "96                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "97                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "98                       0.0      0.0      0.0      0.0      0.0      0.0   \n",
            "99                       0.0      0.0      0.0      0.5      0.0      0.0   \n",
            "\n",
            "Energy Consumption   5508.64  5611.18  5900.32  6042.56  \n",
            "Number of Occupants                                      \n",
            "2                        0.0      0.0      0.0      0.0  \n",
            "3                        0.0      0.0      0.0      0.0  \n",
            "4                        0.0      0.0      0.0      0.0  \n",
            "5                        0.0      0.0      0.0      0.0  \n",
            "6                        0.0      0.0      0.0      0.0  \n",
            "...                      ...      ...      ...      ...  \n",
            "92                       0.0      0.0      0.0      0.0  \n",
            "96                       0.0      0.0      0.0      0.0  \n",
            "97                       0.0      0.0      0.0      0.0  \n",
            "98                       0.0      0.0      0.0      0.0  \n",
            "99                       0.0      0.0      0.0      0.0  \n",
            "\n",
            "[65 rows x 100 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: statistical test to identify feature importance for classification of churn\n",
        "\n",
        "import pandas as pd\n",
        "from scipy.stats import chi2_contingency\n",
        "\n",
        "# Identify categorical features from X_cat (excluding the target if it was still there)\n",
        "categorical_features = X_cat.columns\n",
        "\n",
        "# Perform Chi-Square test for independence between each categorical feature and the target variable 'Churn'\n",
        "print(\"Chi-Square Test Results for Categorical Feature Importance:\")\n",
        "print(\"-\" * 50)\n",
        "\n",
        "for feature in categorical_features:\n",
        "    # Create a contingency table\n",
        "    contingency_table = pd.crosstab(X_cat[feature], y)\n",
        "\n",
        "    # Perform the Chi-Square test\n",
        "    chi2, p, dof, expected = chi2_contingency(contingency_table)\n",
        "\n",
        "    # Print the results\n",
        "    print(f\"Feature: {feature}\")\n",
        "    print(f\"  Chi-Square Statistic: {chi2:.4f}\")\n",
        "    print(f\"  P-value: {p:.4f}\")\n",
        "\n",
        "    # Interpret the p-value (common significance level is 0.05)\n",
        "    if p < 0.05:\n",
        "        print(\"  Interpretation: Reject the null hypothesis. There is a significant association between the feature and Churn.\")\n",
        "    else:\n",
        "        print(\"  Interpretation: Fail to reject the null hypothesis. There is no significant association between the feature and Churn.\")\n",
        "\n",
        "    print(\"-\" * 50)\n",
        "\n",
        "# For numerical features, while not a statistical test of \"importance\" in the same way as chi-square for categorical,\n",
        "# you can look at correlation with the target variable (as done in the preceding code)\n",
        "# or use other methods like t-tests if the assumptions are met.\n",
        "# Since correlation was already computed, we can reiterate the findings or look at the absolute correlation values.\n",
        "\n",
        "print(\"\\nCorrelation with Churn (for Numerical Features):\")\n",
        "print(\"-\" * 50)\n",
        "\n",
        "# Ensure y is numeric for correlation calculation\n",
        "y_numeric = y_encoded # Using the already encoded target\n",
        "\n",
        "# Create a dataframe with numerical features and the numeric target\n",
        "numerical_df_with_target = pd.concat([X_num, pd.Series(y_numeric, name='Churn')], axis=1)\n",
        "\n",
        "# Calculate the correlation of numerical features with Churn\n",
        "correlation_with_churn = numerical_df_with_target.corr()['Churn'].drop('Churn')\n",
        "\n",
        "# Print the correlations\n",
        "print(correlation_with_churn)\n",
        "print(\"-\" * 50)\n",
        "\n",
        "# Interpretation: Higher absolute correlation values indicate a stronger linear relationship with churn."
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gCYgD_JikAWG",
        "outputId": "a24ff733-73fd-45c7-d053-724d5888b4d8"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Chi-Square Test Results for Categorical Feature Importance:\n",
            "--------------------------------------------------\n",
            "Feature: Building Type\n",
            "  Chi-Square Statistic: 200.0000\n",
            "  P-value: 0.4468\n",
            "  Interpretation: Fail to reject the null hypothesis. There is no significant association between the feature and Churn.\n",
            "--------------------------------------------------\n",
            "Feature: Day of Week\n",
            "  Chi-Square Statistic: 100.0000\n",
            "  P-value: 0.4530\n",
            "  Interpretation: Fail to reject the null hypothesis. There is no significant association between the feature and Churn.\n",
            "--------------------------------------------------\n",
            "\n",
            "Correlation with Churn (for Numerical Features):\n",
            "--------------------------------------------------\n",
            "Square Footage         0.707175\n",
            "Number of Occupants    0.299752\n",
            "Appliances Used        0.199948\n",
            "Average Temperature   -0.071129\n",
            "Name: Churn, dtype: float64\n",
            "--------------------------------------------------\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "U1kuORZOkule",
        "outputId": "217182d3-3224-4b3c-ddb4-d42687ce77ca"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Building Type  Square Footage  Number of Occupants  Appliances Used  \\\n",
              "0   Residential           24563                   15                4   \n",
              "1    Commercial           27583                   56               23   \n",
              "2    Commercial           45313                    4               44   \n",
              "3   Residential           41625                   84               17   \n",
              "4   Residential           36720                   58               47   \n",
              "\n",
              "   Average Temperature Day of Week  Energy Consumption  \n",
              "0                28.52     Weekday             2865.57  \n",
              "1                23.07     Weekend             4283.80  \n",
              "2                33.56     Weekday             5067.83  \n",
              "3                27.39     Weekend             4624.30  \n",
              "4                17.08     Weekday             4820.59  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a6d904fa-b408-45c0-a64e-f7da420bc071\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Building Type</th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "      <th>Day of Week</th>\n",
              "      <th>Energy Consumption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Residential</td>\n",
              "      <td>24563</td>\n",
              "      <td>15</td>\n",
              "      <td>4</td>\n",
              "      <td>28.52</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>2865.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>27583</td>\n",
              "      <td>56</td>\n",
              "      <td>23</td>\n",
              "      <td>23.07</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4283.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Commercial</td>\n",
              "      <td>45313</td>\n",
              "      <td>4</td>\n",
              "      <td>44</td>\n",
              "      <td>33.56</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>5067.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Residential</td>\n",
              "      <td>41625</td>\n",
              "      <td>84</td>\n",
              "      <td>17</td>\n",
              "      <td>27.39</td>\n",
              "      <td>Weekend</td>\n",
              "      <td>4624.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Residential</td>\n",
              "      <td>36720</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>17.08</td>\n",
              "      <td>Weekday</td>\n",
              "      <td>4820.59</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6d904fa-b408-45c0-a64e-f7da420bc071')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a6d904fa-b408-45c0-a64e-f7da420bc071 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a6d904fa-b408-45c0-a64e-f7da420bc071');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-5f422350-3448-415d-af95-a13d2f1aaa7b\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f422350-3448-415d-af95-a13d2f1aaa7b')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-5f422350-3448-415d-af95-a13d2f1aaa7b button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Building Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Residential\",\n          \"Commercial\",\n          \"Industrial\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13711,\n        \"min\": 1161,\n        \"max\": 49354,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          21408,\n          39327,\n          37943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 2,\n        \"max\": 99,\n        \"num_unique_values\": 65,\n        \"samples\": [\n          99,\n          64,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 1,\n        \"max\": 49,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          30,\n          45,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.957951349341124,\n        \"min\": 10.4,\n        \"max\": 34.71,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          27.59,\n          19.4,\n          21.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day of Week\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Weekend\",\n          \"Weekday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy Consumption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 832.5598495088822,\n        \"min\": 2351.97,\n        \"max\": 6042.56,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          5900.32,\n          3072.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bSSbMUrBkugv",
        "outputId": "e6c31a0c-d401-41ce-9aa6-6bc3cbb848bd"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "qSZ6KrMGqSpg",
        "outputId": "3a2dfc7e-e735-4a23-ab75-52a32dbac1b5"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Square Footage  Number of Occupants  Appliances Used  \\\n",
              "count      100.000000           100.000000       100.000000   \n",
              "mean     25881.920000            47.230000        26.970000   \n",
              "std      13711.075264            29.905526        14.237846   \n",
              "min       1161.000000             2.000000         1.000000   \n",
              "25%      14161.000000            21.000000        16.750000   \n",
              "50%      27582.500000            47.000000        27.500000   \n",
              "75%      38109.500000            73.000000        39.250000   \n",
              "max      49354.000000            99.000000        49.000000   \n",
              "\n",
              "       Average Temperature  Energy Consumption  \n",
              "count           100.000000           100.00000  \n",
              "mean             22.043300          4187.57830  \n",
              "std               6.957951           832.55985  \n",
              "min              10.400000          2351.97000  \n",
              "25%              15.682500          3621.92500  \n",
              "50%              21.970000          4249.39000  \n",
              "75%              27.492500          4797.17500  \n",
              "max              34.710000          6042.56000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c70087d8-10bb-4540-a5db-3c69ab14ecba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Square Footage</th>\n",
              "      <th>Number of Occupants</th>\n",
              "      <th>Appliances Used</th>\n",
              "      <th>Average Temperature</th>\n",
              "      <th>Energy Consumption</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>100.00000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>25881.920000</td>\n",
              "      <td>47.230000</td>\n",
              "      <td>26.970000</td>\n",
              "      <td>22.043300</td>\n",
              "      <td>4187.57830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>13711.075264</td>\n",
              "      <td>29.905526</td>\n",
              "      <td>14.237846</td>\n",
              "      <td>6.957951</td>\n",
              "      <td>832.55985</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1161.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>10.400000</td>\n",
              "      <td>2351.97000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>14161.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>16.750000</td>\n",
              "      <td>15.682500</td>\n",
              "      <td>3621.92500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>27582.500000</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>27.500000</td>\n",
              "      <td>21.970000</td>\n",
              "      <td>4249.39000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>38109.500000</td>\n",
              "      <td>73.000000</td>\n",
              "      <td>39.250000</td>\n",
              "      <td>27.492500</td>\n",
              "      <td>4797.17500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>49354.000000</td>\n",
              "      <td>99.000000</td>\n",
              "      <td>49.000000</td>\n",
              "      <td>34.710000</td>\n",
              "      <td>6042.56000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c70087d8-10bb-4540-a5db-3c69ab14ecba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c70087d8-10bb-4540-a5db-3c69ab14ecba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c70087d8-10bb-4540-a5db-3c69ab14ecba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b4382e72-f85f-44a9-8b42-89bf2e974fa7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b4382e72-f85f-44a9-8b42-89bf2e974fa7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b4382e72-f85f-44a9-8b42-89bf2e974fa7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Square Footage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17294.144585067497,\n        \"min\": 100.0,\n        \"max\": 49354.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25881.92,\n          27582.5,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Occupants\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.7564973638188,\n        \"min\": 2.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          47.23,\n          47.0,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Appliances Used\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.41715228396069,\n        \"min\": 1.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26.97,\n          27.5,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.703966301182287,\n        \"min\": 6.957951349341124,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          22.0433,\n          21.97,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy Consumption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2027.5631002765354,\n        \"min\": 100.0,\n        \"max\": 6042.56,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4187.5783,\n          4249.389999999999,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# model.py\n",
        "import joblib\n",
        "import numpy as np\n",
        "\n",
        "def load_model(model_path=\"energy_model.pkl\"):\n",
        "    \"\"\"\n",
        "    Load a trained model from a file.\n",
        "    \"\"\"\n",
        "    try:\n",
        "        model = joblib.load(model_path)\n",
        "        return model\n",
        "    except FileNotFoundError:\n",
        "        return None\n",
        "\n",
        "def predict_energy(model, input_features):\n",
        "    \"\"\"\n",
        "    Predict energy consumption.\n",
        "    input_features: list or array of feature values\n",
        "    \"\"\"\n",
        "    input_array = np.array([input_features])\n",
        "    prediction = model.predict(input_array)[0]\n",
        "    return prediction\n"
      ],
      "metadata": {
        "id": "aEvg5ZDuEyCN"
      },
      "execution_count": 14,
      "outputs": []
    }
  ]
}