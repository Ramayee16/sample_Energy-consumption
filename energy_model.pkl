import numpy as np
import joblib
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import pandas as pd

def train_model(csv_file="energy_data.csv"):
    """Train a Linear Regression model and save it"""
    df = pd.read_csv(csv_file)
    X = df[['temperature', 'humidity', 'wind_speed', 'hour_of_day', 'day_of_week']]
    y = df['energy_consumption']
    
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    model = LinearRegression()
    model.fit(X_train, y_train)
    
    mse = mean_squared_error(y_test, model.predict(X_test))
    print(f"Model trained. MSE: {mse:.2f}")
    
    joblib.dump(model, "energy_model.pkl")
    return model

def load_model(model_path="energy_model.pkl"):
    """Load a trained model from a file"""
    try:
        model = joblib.load(model_path)
        return model
    except FileNotFoundError:
        return None

def predict_energy(model, input_features):
    """Predict energy consumption"""
    input_array = np.array([input_features])
    prediction = model.predict(input_array)[0]
    return prediction
